{
    "openrpc": "1.0.0-rc1",
    "info": {
        "title": "p2panda RPC interface",
        "version": "0.0.1",
        "description": "The API for a p2panda node which can be used for creating and retrieving entries on a Bamboo append-only log.",
        "contact": {
            "name": "p2panda Team",
            "email": "contributors@p2panda.org",
            "url": "https://p2panda.org"
        },
        "license": {
            "name": "GNU Affero General Public License v3.0"
        }
    },
    "servers": [
        {
            "name": "p2panda node",
            "url": "https://welle.liebechaos.org"
        }
    ],
    "components": {
        "contentDescriptors": {
            "EntryArgs": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "Author": {
                "name": "author",
                "summary": "The public key of a p2panda author",
                "description": "Authors are hex encoded Ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "pattern": "[0-9a-f]{64}",
                    "minLength": 64,
                    "maxLength": 64
                }
            },
            "Schema": {
                "name": "schema",
                "summary": "The hash of a p2panda schema",
                "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "minLength": 68,
                    "maxLength": 68,
                    "pattern": "[0-9a-f]{68}"
                }
            },
            "DocumentId": {
                "name": "document",
                "summary": "The hash identifying a document",
                "required": false,
                "schema": {
                    "type": "string",
                    "minLength": 68,
                    "maxLength": 68,
                    "pattern": "[0-9a-f]{68}"
                }
            },
            "QueryEntriesResponse": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "string"
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "Author": {
                "type": "string",
                "pattern": "[0-9a-f]{64}",
                "minLength": 64,
                "maxLength": 64
            },
            "Hash": {
                "type": "string",
                "minLength": 68,
                "maxLength": 68,
                "pattern": "[0-9a-f]{68}"
            },
            "EntryArgs": {
                "type": "object",
                "properties": {
                    "entryHashSkiplink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "entryHashBacklink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "seqNum": {
                        "type": "string"
                    },
                    "logId": {
                        "type": "string"
                    }
                }
            },
            "Entry": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    },
                    "entryBytes": {
                        "type": "string"
                    },
                    "entryHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "logId": {
                        "type": "string"
                    },
                    "payloadBytes": {
                        "type": "string"
                    },
                    "payloadHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "seqNum": {
                        "type": "string"
                    }
                }
            },
            "EntryEncoded": {
                "type": "string"
            },
            "OperationEncoded": {
                "type": "string"
            },
            "Entries": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "author": {
                            "type": "string",
                            "pattern": "[0-9a-f]{64}",
                            "minLength": 64,
                            "maxLength": 64
                        },
                        "entryBytes": {
                            "type": "string"
                        },
                        "entryHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "logId": {
                            "type": "string"
                        },
                        "payloadBytes": {
                            "type": "string"
                        },
                        "payloadHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "seqNum": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "examples": {
            "Entry1": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                "value": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494822669c20d32384f1cec1ca2a4ddbe2eb7ed184f2a60f01957436c32228351616db5be9772b137927990e977b10904e2730e1d7a63253eefd72b4f329acc0d06"
            },
            "Entry2": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                "value": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501020020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd25f30020e4c7dd99c03091dee8a64dfc6b8fd4152badce6b9ad04857ef5b213cf4e0fc7f63a9b9c03b9bf925678091cbbedcc7090f75978b5df70e06d9cd399db8d1bd95bd1582bacdb767bb277cf0b84c143123015e1873f5c87af44e80f75385ba0f0c"
            },
            "Entry3": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                "value": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501030020ed83aed0fcfa264e5de764ffc2ddf1e03c5e3d58d97838abdeb5afeac40cc3cff60020d952a6f6fb6abfe17602c2b8176a20f2f69f3b11e8ec3dccaa03131dd6216cf0115934e771779957ada862a08b41b68bd3800472b16cb3f5b9d3ba601ec722939292ffd23247736bbecfdc370c76be401b457f5e2bdfb845bac6960062d50908"
            },
            "Entry4": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                "value": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501040020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd2500206b4e22562f07a4b92567c1aa369f275edd532d2f9e0ed2c7e29fd6a7ccd5ae01bf00206c1e91c5b20f1d6e55df80753085d580ca293d5e1e11344afcd18aefab19d0716a5e67c48d0e0e47e7cef5000da29bdf5b337c652ca961f0069fe560e98e71a8f38b343eb15f48dc23c2c306bd245a5640ef2e8a025ffc2f53c2764b1f0a2108"
            },
            "Operation1": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
            },
            "Operation2": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e738178443030323063376365663963336632346337373438636238313466376435366635366435613534613536386330636439373235623336343735323464313430623163643235666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
            },
            "Operation3": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e738178443030323065643833616564306663666132363465356465373634666663326464663165303363356533643538643937383338616264656235616665616334306363336366666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e"
            },
            "Operation4": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e738178443030323036623465323235363266303761346239323536376331616133363966323735656464353332643266396530656432633765323966643661376363643561653031"
            },
            "EntryArgs1": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the first `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": null,
                    "entryHashSkiplink": null,
                    "seqNum": "1",
                    "logId": "1"
                }
            },
            "EntryArgs2": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the second `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd25",
                    "entryHashSkiplink": null,
                    "seqNum": "2",
                    "logId": "1"
                }
            },
            "EntryArgs3": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the third `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020ed83aed0fcfa264e5de764ffc2ddf1e03c5e3d58d97838abdeb5afeac40cc3cf",
                    "entryHashSkiplink": null,
                    "seqNum": "3",
                    "logId": "1"
                }
            },
            "EntryArgs4": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "00206b4e22562f07a4b92567c1aa369f275edd532d2f9e0ed2c7e29fd6a7ccd5ae01",
                    "entryHashSkiplink": "0020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd25",
                    "seqNum": "4",
                    "logId": "1"
                }
            },
            "EntryArgs5": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020bc7a9f06938a6b565e719d19d680e6f53f26faae8057788088476f4be8f7cdf9",
                    "entryHashSkiplink": null,
                    "seqNum": "5",
                    "logId": "1"
                }
            },
            "Author": {
                "name": "author",
                "summary": "The `Author` of the test log.",
                "value": "9029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf525"
            },
            "Schema": {
                "name": "schema",
                "summary": "The used `Schema` for the application data",
                "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
            },
            "DocumentId": {
                "name": "document",
                "summary": "The `DocumentId` which this log is assigned",
                "value": "0020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd25"
            },
            "Entries": {
                "name": "entries",
                "summary": "All `Entries` in the test Log",
                "value": {
                    "entries": [
                        {
                            "author": "9029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf525",
                            "entryBytes": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494822669c20d32384f1cec1ca2a4ddbe2eb7ed184f2a60f01957436c32228351616db5be9772b137927990e977b10904e2730e1d7a63253eefd72b4f329acc0d06",
                            "entryHash": "0020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd25",
                            "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                            "payloadHash": "0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494",
                            "logId": "1",
                            "seqNum": "1"
                        },
                        {
                            "author": "9029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf525",
                            "entryBytes": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501020020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd25f30020e4c7dd99c03091dee8a64dfc6b8fd4152badce6b9ad04857ef5b213cf4e0fc7f63a9b9c03b9bf925678091cbbedcc7090f75978b5df70e06d9cd399db8d1bd95bd1582bacdb767bb277cf0b84c143123015e1873f5c87af44e80f75385ba0f0c",
                            "entryHash": "0020ed83aed0fcfa264e5de764ffc2ddf1e03c5e3d58d97838abdeb5afeac40cc3cf",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e738178443030323063376365663963336632346337373438636238313466376435366635366435613534613536386330636439373235623336343735323464313430623163643235666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                            "payloadHash": "0020e4c7dd99c03091dee8a64dfc6b8fd4152badce6b9ad04857ef5b213cf4e0fc7f",
                            "logId": "1",
                            "seqNum": "2"
                        },
                        {
                            "author": "9029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf525",
                            "entryBytes": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501030020ed83aed0fcfa264e5de764ffc2ddf1e03c5e3d58d97838abdeb5afeac40cc3cff60020d952a6f6fb6abfe17602c2b8176a20f2f69f3b11e8ec3dccaa03131dd6216cf0115934e771779957ada862a08b41b68bd3800472b16cb3f5b9d3ba601ec722939292ffd23247736bbecfdc370c76be401b457f5e2bdfb845bac6960062d50908",
                            "entryHash": "00206b4e22562f07a4b92567c1aa369f275edd532d2f9e0ed2c7e29fd6a7ccd5ae01",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e738178443030323065643833616564306663666132363465356465373634666663326464663165303363356533643538643937383338616264656235616665616334306363336366666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e",
                            "payloadHash": "0020d952a6f6fb6abfe17602c2b8176a20f2f69f3b11e8ec3dccaa03131dd6216cf0",
                            "logId": "1",
                            "seqNum": "3"
                        },
                        {
                            "author": "9029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf525",
                            "entryBytes": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501040020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd2500206b4e22562f07a4b92567c1aa369f275edd532d2f9e0ed2c7e29fd6a7ccd5ae01bf00206c1e91c5b20f1d6e55df80753085d580ca293d5e1e11344afcd18aefab19d0716a5e67c48d0e0e47e7cef5000da29bdf5b337c652ca961f0069fe560e98e71a8f38b343eb15f48dc23c2c306bd245a5640ef2e8a025ffc2f53c2764b1f0a2108",
                            "entryHash": "0020bc7a9f06938a6b565e719d19d680e6f53f26faae8057788088476f4be8f7cdf9",
                            "payloadBytes": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e738178443030323036623465323235363266303761346239323536376331616133363966323735656464353332643266396530656432633765323966643661376363643561653031",
                            "payloadHash": "00206c1e91c5b20f1d6e55df80753085d580ca293d5e1e11344afcd18aefab19d071",
                            "logId": "1",
                            "seqNum": "4"
                        }
                    ]
                }
            }
        }
    },
    "methods": [
        {
            "name": "panda_getEntryArguments",
            "summary": "Returns arguments needed for constructing the next entry given author and document id.",
            "description": "Fetch the required arguments needed when constructing and publishing an `Entry` to a p2panda log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "author",
                    "summary": "The public key of a p2panda author",
                    "description": "Authors are hex encoded Ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    }
                },
                {
                    "name": "document",
                    "summary": "The hash identifying a document",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example `Entry` arguments request.",
                    "summary": "An example of a valid parameters and response when making a request, based on test data.",
                    "params": [
                        {
                            "name": "author",
                            "summary": "The `Author` of the test log.",
                            "value": "9029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf525"
                        },
                        {
                            "name": "document",
                            "summary": "The `DocumentId` which this log is assigned",
                            "value": "0020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd25"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020bc7a9f06938a6b565e719d19d680e6f53f26faae8057788088476f4be8f7cdf9",
                            "entryHashSkiplink": null,
                            "seqNum": "5",
                            "logId": "1"
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_queryEntries",
            "summary": "Query node for encoded entries of a given schema.",
            "description": "This method returns all entries of a given schema. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "schema",
                    "summary": "The hash of a p2panda schema",
                    "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "string"
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example request for the next `Entry` arguments",
                    "summary": "The parameters and response when making this request according to the test data.",
                    "params": [
                        {
                            "name": "schema",
                            "summary": "The used `Schema` for the application data",
                            "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
                        }
                    ],
                    "result": {
                        "name": "entries",
                        "summary": "All `Entries` in the test Log",
                        "value": {
                            "entries": [
                                {
                                    "author": "9029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf525",
                                    "entryBytes": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494822669c20d32384f1cec1ca2a4ddbe2eb7ed184f2a60f01957436c32228351616db5be9772b137927990e977b10904e2730e1d7a63253eefd72b4f329acc0d06",
                                    "entryHash": "0020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd25",
                                    "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                                    "payloadHash": "0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494",
                                    "logId": "1",
                                    "seqNum": "1"
                                },
                                {
                                    "author": "9029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf525",
                                    "entryBytes": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501020020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd25f30020e4c7dd99c03091dee8a64dfc6b8fd4152badce6b9ad04857ef5b213cf4e0fc7f63a9b9c03b9bf925678091cbbedcc7090f75978b5df70e06d9cd399db8d1bd95bd1582bacdb767bb277cf0b84c143123015e1873f5c87af44e80f75385ba0f0c",
                                    "entryHash": "0020ed83aed0fcfa264e5de764ffc2ddf1e03c5e3d58d97838abdeb5afeac40cc3cf",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e738178443030323063376365663963336632346337373438636238313466376435366635366435613534613536386330636439373235623336343735323464313430623163643235666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                                    "payloadHash": "0020e4c7dd99c03091dee8a64dfc6b8fd4152badce6b9ad04857ef5b213cf4e0fc7f",
                                    "logId": "1",
                                    "seqNum": "2"
                                },
                                {
                                    "author": "9029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf525",
                                    "entryBytes": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501030020ed83aed0fcfa264e5de764ffc2ddf1e03c5e3d58d97838abdeb5afeac40cc3cff60020d952a6f6fb6abfe17602c2b8176a20f2f69f3b11e8ec3dccaa03131dd6216cf0115934e771779957ada862a08b41b68bd3800472b16cb3f5b9d3ba601ec722939292ffd23247736bbecfdc370c76be401b457f5e2bdfb845bac6960062d50908",
                                    "entryHash": "00206b4e22562f07a4b92567c1aa369f275edd532d2f9e0ed2c7e29fd6a7ccd5ae01",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e738178443030323065643833616564306663666132363465356465373634666663326464663165303363356533643538643937383338616264656235616665616334306363336366666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e",
                                    "payloadHash": "0020d952a6f6fb6abfe17602c2b8176a20f2f69f3b11e8ec3dccaa03131dd6216cf0",
                                    "logId": "1",
                                    "seqNum": "3"
                                },
                                {
                                    "author": "9029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf525",
                                    "entryBytes": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501040020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd2500206b4e22562f07a4b92567c1aa369f275edd532d2f9e0ed2c7e29fd6a7ccd5ae01bf00206c1e91c5b20f1d6e55df80753085d580ca293d5e1e11344afcd18aefab19d0716a5e67c48d0e0e47e7cef5000da29bdf5b337c652ca961f0069fe560e98e71a8f38b343eb15f48dc23c2c306bd245a5640ef2e8a025ffc2f53c2764b1f0a2108",
                                    "entryHash": "0020bc7a9f06938a6b565e719d19d680e6f53f26faae8057788088476f4be8f7cdf9",
                                    "payloadBytes": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e738178443030323036623465323235363266303761346239323536376331616133363966323735656464353332643266396530656432633765323966643661376363643561653031",
                                    "payloadHash": "00206c1e91c5b20f1d6e55df80753085d580ca293d5e1e11344afcd18aefab19d071",
                                    "logId": "1",
                                    "seqNum": "4"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_publishEntry",
            "summary": "Publish an encoded entry and operation.",
            "description": "Publish a new `Entry` to a `p2panda` log. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "entryEncoded",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "operationEncoded",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                            "value": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494822669c20d32384f1cec1ca2a4ddbe2eb7ed184f2a60f01957436c32228351616db5be9772b137927990e977b10904e2730e1d7a63253eefd72b4f329acc0d06"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the second `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd25",
                            "entryHashSkiplink": null,
                            "seqNum": "2",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                            "value": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501020020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd25f30020e4c7dd99c03091dee8a64dfc6b8fd4152badce6b9ad04857ef5b213cf4e0fc7f63a9b9c03b9bf925678091cbbedcc7090f75978b5df70e06d9cd399db8d1bd95bd1582bacdb767bb277cf0b84c143123015e1873f5c87af44e80f75385ba0f0c"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e738178443030323063376365663963336632346337373438636238313466376435366635366435613534613536386330636439373235623336343735323464313430623163643235666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the third `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020ed83aed0fcfa264e5de764ffc2ddf1e03c5e3d58d97838abdeb5afeac40cc3cf",
                            "entryHashSkiplink": null,
                            "seqNum": "3",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                            "value": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501030020ed83aed0fcfa264e5de764ffc2ddf1e03c5e3d58d97838abdeb5afeac40cc3cff60020d952a6f6fb6abfe17602c2b8176a20f2f69f3b11e8ec3dccaa03131dd6216cf0115934e771779957ada862a08b41b68bd3800472b16cb3f5b9d3ba601ec722939292ffd23247736bbecfdc370c76be401b457f5e2bdfb845bac6960062d50908"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e738178443030323065643833616564306663666132363465356465373634666663326464663165303363356533643538643937383338616264656235616665616334306363336366666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00206b4e22562f07a4b92567c1aa369f275edd532d2f9e0ed2c7e29fd6a7ccd5ae01",
                            "entryHashSkiplink": "0020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd25",
                            "seqNum": "4",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                            "value": "009029ae410735f8da7650a1727dcffd34e8dd85f5267cadaf96f482730addf52501040020c7cef9c3f24c7748cb814f7d56f56d5a54a568c0cd9725b3647524d140b1cd2500206b4e22562f07a4b92567c1aa369f275edd532d2f9e0ed2c7e29fd6a7ccd5ae01bf00206c1e91c5b20f1d6e55df80753085d580ca293d5e1e11344afcd18aefab19d0716a5e67c48d0e0e47e7cef5000da29bdf5b337c652ca961f0069fe560e98e71a8f38b343eb15f48dc23c2c306bd245a5640ef2e8a025ffc2f53c2764b1f0a2108"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e738178443030323036623465323235363266303761346239323536376331616133363966323735656464353332643266396530656432633765323966643661376363643561653031"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020bc7a9f06938a6b565e719d19d680e6f53f26faae8057788088476f4be8f7cdf9",
                            "entryHashSkiplink": null,
                            "seqNum": "5",
                            "logId": "1"
                        }
                    }
                }
            ]
        }
    ]
}