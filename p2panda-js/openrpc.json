{
    "openrpc": "1.0.0-rc1",
    "info": {
        "title": "p2panda RPC interface",
        "version": "0.0.1",
        "description": "The API for a p2panda node which can be used for creating and retrieving entries on a Bamboo append-only log.",
        "contact": {
            "name": "p2panda Team",
            "email": "contributors@p2panda.org",
            "url": "https://p2panda.org"
        },
        "license": {
            "name": "GNU Affero General Public License v3.0"
        }
    },
    "servers": [
        {
            "name": "p2panda node",
            "url": "https://welle.liebechaos.org"
        }
    ],
    "components": {
        "contentDescriptors": {
            "EntryArgs": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "Author": {
                "name": "author",
                "summary": "The public key of a p2panda author",
                "description": "Authors are hex encoded ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "pattern": "[0-9a-f]{64}",
                    "minLength": 64,
                    "maxLength": 64
                }
            },
            "Schema": {
                "name": "schema",
                "summary": "The hash of a p2panda schema",
                "description": "Validation for message payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda messages. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "minLength": 68,
                    "maxLength": 68,
                    "pattern": "[0-9a-f]{68}"
                }
            },
            "QueryEntriesResponse": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "number",
                                "minimum": 1
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "number",
                                "minimum": 1
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "Author": {
                "type": "string",
                "pattern": "[0-9a-f]{64}",
                "minLength": 64,
                "maxLength": 64
            },
            "Hash": {
                "type": "string",
                "minLength": 68,
                "maxLength": 68,
                "pattern": "[0-9a-f]{68}"
            },
            "EntryArgs": {
                "type": "object",
                "properties": {
                    "entryHashSkiplink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "entryHashBacklink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "seqNum": {
                        "type": "number",
                        "minimum": 1
                    },
                    "logId": {
                        "type": "number",
                        "minimum": 1
                    }
                }
            },
            "Entry": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    },
                    "entryBytes": {
                        "type": "string"
                    },
                    "entryHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "logId": {
                        "type": "number",
                        "minimum": 1
                    },
                    "payloadBytes": {
                        "type": "string"
                    },
                    "payloadHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "seqNum": {
                        "type": "number",
                        "minimum": 1
                    }
                }
            },
            "EntryEncoded": {
                "type": "string"
            },
            "MessageEncoded": {
                "type": "string"
            },
            "Entries": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "author": {
                            "type": "string",
                            "pattern": "[0-9a-f]{64}",
                            "minLength": 64,
                            "maxLength": 64
                        },
                        "entryBytes": {
                            "type": "string"
                        },
                        "entryHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        },
                        "payloadBytes": {
                            "type": "string"
                        },
                        "payloadHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            }
        },
        "examples": {
            "Entry1": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                "value": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701019c002003a7c9205769a33f73fe659fe2de28cda99e2fbdb0354247a245627b0152934b55a3ae09865db1d52af2d165d3092095886185f377e3baf389a554a00f04b01ab6a6d33700794bd72dc912c327db80434335770a4fe8f355390814d0bca0530f"
            },
            "Entry2": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                "value": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701020020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7de200208c89f3fd3292d4374768ee1afa1a5901aa4987a393cc0f86914989bae892e92f60a31eb9e58dbcbb94c8aa73e4f32a4a14e35cccf785e0274971fbdeb5b2156b28a5492d8edf626bc8f9f66414aa8f123a2153c8edd32bd21ecc13186134160e"
            },
            "Entry3": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                "value": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701030020b89b746d49fb84dbf5c4f37dbd73789d8896af54d708ba2bed8ea9a6ef92a20fae0020d865853ec88444bd5fb5098304b5cf5b5de955322b59f52f00dc334d3de2580a7a73e114e9d0a54c807a992e07981d6359ab0fc50f16a56e050bf6e5b1f6168df9106fdc137035bb284486320569d990732a5a35b38a6afd9c8ea2caffc6b100"
            },
            "Entry4": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                "value": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701040020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7d00206b0ede2a726382da6cc9a382c9a0c4370d5fefb6203079166dc2cfc261c61f159b0020a318cfb5ecb14de059ae3c9a3d18d52177c02344fdd6daf616b40dd9c989014f018219c75f10ebfd5b28d7d5f2b17f3a43cdd6d9451149a0fcc496f83dcc49820b5650b534c170e57ff4c6bceeeca1caeaec709589c05442d314215495f62d00"
            },
            "Message1": {
                "name": "messageEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e02666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
            },
            "Message2": {
                "name": "messageEncoded",
                "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0262696478443030323065636636623730373735306631346565383662366331333538663435386436393637643861343264363637326536613630376164633465303933366637653764666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
            },
            "Message3": {
                "name": "messageEncoded",
                "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0262696478443030323065636636623730373735306631346565383662366331333538663435386436393637643861343264363637326536613630376164633465303933366637653764"
            },
            "Message4": {
                "name": "messageEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e02666669656c6473a1676d657373616765a26474797065637374726576616c7565754c6574277320747279207468617420616761696e2e"
            },
            "EntryArgs1": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the first `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": null,
                    "entryHashSkiplink": null,
                    "seqNum": 1,
                    "logId": 1
                }
            },
            "EntryArgs2": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the second `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7d",
                    "entryHashSkiplink": null,
                    "seqNum": 2,
                    "logId": 1
                }
            },
            "EntryArgs3": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the third `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020b89b746d49fb84dbf5c4f37dbd73789d8896af54d708ba2bed8ea9a6ef92a20f",
                    "entryHashSkiplink": null,
                    "seqNum": 3,
                    "logId": 1
                }
            },
            "EntryArgs4": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "00206b0ede2a726382da6cc9a382c9a0c4370d5fefb6203079166dc2cfc261c61f15",
                    "entryHashSkiplink": "0020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7d",
                    "seqNum": 4,
                    "logId": 1
                }
            },
            "EntryArgs5": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020e14cdf2eb12187424d86fc9a66faae4718a6a4cfe1fe4cdb1a615ded90387f20",
                    "entryHashSkiplink": null,
                    "seqNum": 5,
                    "logId": 1
                }
            },
            "Author": {
                "name": "author",
                "summary": "The `Author` of the test log.",
                "value": "6346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db7"
            },
            "Schema": {
                "name": "schema",
                "summary": "The `Schema` which this log is assigned",
                "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
            },
            "Entries": {
                "name": "entries",
                "summary": "All `Entries` in the test Log",
                "value": {
                    "entries": [
                        {
                            "author": "6346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db7",
                            "entryBytes": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701019c002003a7c9205769a33f73fe659fe2de28cda99e2fbdb0354247a245627b0152934b55a3ae09865db1d52af2d165d3092095886185f377e3baf389a554a00f04b01ab6a6d33700794bd72dc912c327db80434335770a4fe8f355390814d0bca0530f",
                            "entryHash": "0020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7d",
                            "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e02666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                            "payloadHash": "002003a7c9205769a33f73fe659fe2de28cda99e2fbdb0354247a245627b0152934b",
                            "logId": 1,
                            "seqNum": 1
                        },
                        {
                            "author": "6346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db7",
                            "entryBytes": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701020020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7de200208c89f3fd3292d4374768ee1afa1a5901aa4987a393cc0f86914989bae892e92f60a31eb9e58dbcbb94c8aa73e4f32a4a14e35cccf785e0274971fbdeb5b2156b28a5492d8edf626bc8f9f66414aa8f123a2153c8edd32bd21ecc13186134160e",
                            "entryHash": "0020b89b746d49fb84dbf5c4f37dbd73789d8896af54d708ba2bed8ea9a6ef92a20f",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0262696478443030323065636636623730373735306631346565383662366331333538663435386436393637643861343264363637326536613630376164633465303933366637653764666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                            "payloadHash": "00208c89f3fd3292d4374768ee1afa1a5901aa4987a393cc0f86914989bae892e92f",
                            "logId": 1,
                            "seqNum": 2
                        },
                        {
                            "author": "6346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db7",
                            "entryBytes": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701030020b89b746d49fb84dbf5c4f37dbd73789d8896af54d708ba2bed8ea9a6ef92a20fae0020d865853ec88444bd5fb5098304b5cf5b5de955322b59f52f00dc334d3de2580a7a73e114e9d0a54c807a992e07981d6359ab0fc50f16a56e050bf6e5b1f6168df9106fdc137035bb284486320569d990732a5a35b38a6afd9c8ea2caffc6b100",
                            "entryHash": "00206b0ede2a726382da6cc9a382c9a0c4370d5fefb6203079166dc2cfc261c61f15",
                            "payloadBytes": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0262696478443030323065636636623730373735306631346565383662366331333538663435386436393637643861343264363637326536613630376164633465303933366637653764",
                            "payloadHash": "0020d865853ec88444bd5fb5098304b5cf5b5de955322b59f52f00dc334d3de2580a",
                            "logId": 1,
                            "seqNum": 3
                        },
                        {
                            "author": "6346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db7",
                            "entryBytes": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701040020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7d00206b0ede2a726382da6cc9a382c9a0c4370d5fefb6203079166dc2cfc261c61f159b0020a318cfb5ecb14de059ae3c9a3d18d52177c02344fdd6daf616b40dd9c989014f018219c75f10ebfd5b28d7d5f2b17f3a43cdd6d9451149a0fcc496f83dcc49820b5650b534c170e57ff4c6bceeeca1caeaec709589c05442d314215495f62d00",
                            "entryHash": "0020e14cdf2eb12187424d86fc9a66faae4718a6a4cfe1fe4cdb1a615ded90387f20",
                            "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e02666669656c6473a1676d657373616765a26474797065637374726576616c7565754c6574277320747279207468617420616761696e2e",
                            "payloadHash": "0020a318cfb5ecb14de059ae3c9a3d18d52177c02344fdd6daf616b40dd9c989014f",
                            "logId": 1,
                            "seqNum": 4
                        }
                    ]
                }
            }
        }
    },
    "methods": [
        {
            "name": "panda_getEntryArguments",
            "summary": "Returns arguments needed for constructing the next entry given author and schema.",
            "description": "Fetch the required arguments needed when constructing and publishing an `Entry` to a p2panda log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "author",
                    "summary": "The public key of a p2panda author",
                    "description": "Authors are hex encoded ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    }
                },
                {
                    "name": "schema",
                    "summary": "The hash of a p2panda schema",
                    "description": "Validation for message payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda messages. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example `Entry` arguments request.",
                    "summary": "An example of a valid parameters and response when making a request, based on test data.",
                    "params": [
                        {
                            "name": "author",
                            "summary": "The `Author` of the test log.",
                            "value": "6346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db7"
                        },
                        {
                            "name": "schema",
                            "summary": "The `Schema` which this log is assigned",
                            "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020e14cdf2eb12187424d86fc9a66faae4718a6a4cfe1fe4cdb1a615ded90387f20",
                            "entryHashSkiplink": null,
                            "seqNum": 5,
                            "logId": 1
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_queryEntries",
            "summary": "Query node for encoded entries of a given schema.",
            "description": "This method returns all entries of a given schema. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "schema",
                    "summary": "The hash of a p2panda schema",
                    "description": "Validation for message payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda messages. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "number",
                                "minimum": 1
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "number",
                                "minimum": 1
                            }
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example request for the next `Entry` arguments",
                    "summary": "The parameters and response when making this request according to the test data.",
                    "params": [
                        {
                            "name": "schema",
                            "summary": "The `Schema` which this log is assigned",
                            "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
                        }
                    ],
                    "result": {
                        "name": "entries",
                        "summary": "All `Entries` in the test Log",
                        "value": {
                            "entries": [
                                {
                                    "author": "6346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db7",
                                    "entryBytes": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701019c002003a7c9205769a33f73fe659fe2de28cda99e2fbdb0354247a245627b0152934b55a3ae09865db1d52af2d165d3092095886185f377e3baf389a554a00f04b01ab6a6d33700794bd72dc912c327db80434335770a4fe8f355390814d0bca0530f",
                                    "entryHash": "0020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7d",
                                    "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e02666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                                    "payloadHash": "002003a7c9205769a33f73fe659fe2de28cda99e2fbdb0354247a245627b0152934b",
                                    "logId": 1,
                                    "seqNum": 1
                                },
                                {
                                    "author": "6346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db7",
                                    "entryBytes": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701020020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7de200208c89f3fd3292d4374768ee1afa1a5901aa4987a393cc0f86914989bae892e92f60a31eb9e58dbcbb94c8aa73e4f32a4a14e35cccf785e0274971fbdeb5b2156b28a5492d8edf626bc8f9f66414aa8f123a2153c8edd32bd21ecc13186134160e",
                                    "entryHash": "0020b89b746d49fb84dbf5c4f37dbd73789d8896af54d708ba2bed8ea9a6ef92a20f",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0262696478443030323065636636623730373735306631346565383662366331333538663435386436393637643861343264363637326536613630376164633465303933366637653764666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                                    "payloadHash": "00208c89f3fd3292d4374768ee1afa1a5901aa4987a393cc0f86914989bae892e92f",
                                    "logId": 1,
                                    "seqNum": 2
                                },
                                {
                                    "author": "6346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db7",
                                    "entryBytes": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701030020b89b746d49fb84dbf5c4f37dbd73789d8896af54d708ba2bed8ea9a6ef92a20fae0020d865853ec88444bd5fb5098304b5cf5b5de955322b59f52f00dc334d3de2580a7a73e114e9d0a54c807a992e07981d6359ab0fc50f16a56e050bf6e5b1f6168df9106fdc137035bb284486320569d990732a5a35b38a6afd9c8ea2caffc6b100",
                                    "entryHash": "00206b0ede2a726382da6cc9a382c9a0c4370d5fefb6203079166dc2cfc261c61f15",
                                    "payloadBytes": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0262696478443030323065636636623730373735306631346565383662366331333538663435386436393637643861343264363637326536613630376164633465303933366637653764",
                                    "payloadHash": "0020d865853ec88444bd5fb5098304b5cf5b5de955322b59f52f00dc334d3de2580a",
                                    "logId": 1,
                                    "seqNum": 3
                                },
                                {
                                    "author": "6346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db7",
                                    "entryBytes": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701040020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7d00206b0ede2a726382da6cc9a382c9a0c4370d5fefb6203079166dc2cfc261c61f159b0020a318cfb5ecb14de059ae3c9a3d18d52177c02344fdd6daf616b40dd9c989014f018219c75f10ebfd5b28d7d5f2b17f3a43cdd6d9451149a0fcc496f83dcc49820b5650b534c170e57ff4c6bceeeca1caeaec709589c05442d314215495f62d00",
                                    "entryHash": "0020e14cdf2eb12187424d86fc9a66faae4718a6a4cfe1fe4cdb1a615ded90387f20",
                                    "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e02666669656c6473a1676d657373616765a26474797065637374726576616c7565754c6574277320747279207468617420616761696e2e",
                                    "payloadHash": "0020a318cfb5ecb14de059ae3c9a3d18d52177c02344fdd6daf616b40dd9c989014f",
                                    "logId": 1,
                                    "seqNum": 4
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_publishEntry",
            "summary": "Publish an encoded entry and message.",
            "description": "Publish a new `Entry` to a `p2panda` log. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "entryEncoded",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "messageEncoded",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                            "value": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701019c002003a7c9205769a33f73fe659fe2de28cda99e2fbdb0354247a245627b0152934b55a3ae09865db1d52af2d165d3092095886185f377e3baf389a554a00f04b01ab6a6d33700794bd72dc912c327db80434335770a4fe8f355390814d0bca0530f"
                        },
                        {
                            "name": "messageEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e02666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the second `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7d",
                            "entryHashSkiplink": null,
                            "seqNum": 2,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                            "value": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701020020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7de200208c89f3fd3292d4374768ee1afa1a5901aa4987a393cc0f86914989bae892e92f60a31eb9e58dbcbb94c8aa73e4f32a4a14e35cccf785e0274971fbdeb5b2156b28a5492d8edf626bc8f9f66414aa8f123a2153c8edd32bd21ecc13186134160e"
                        },
                        {
                            "name": "messageEncoded",
                            "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0262696478443030323065636636623730373735306631346565383662366331333538663435386436393637643861343264363637326536613630376164633465303933366637653764666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the third `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020b89b746d49fb84dbf5c4f37dbd73789d8896af54d708ba2bed8ea9a6ef92a20f",
                            "entryHashSkiplink": null,
                            "seqNum": 3,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                            "value": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701030020b89b746d49fb84dbf5c4f37dbd73789d8896af54d708ba2bed8ea9a6ef92a20fae0020d865853ec88444bd5fb5098304b5cf5b5de955322b59f52f00dc334d3de2580a7a73e114e9d0a54c807a992e07981d6359ab0fc50f16a56e050bf6e5b1f6168df9106fdc137035bb284486320569d990732a5a35b38a6afd9c8ea2caffc6b100"
                        },
                        {
                            "name": "messageEncoded",
                            "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0262696478443030323065636636623730373735306631346565383662366331333538663435386436393637643861343264363637326536613630376164633465303933366637653764"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00206b0ede2a726382da6cc9a382c9a0c4370d5fefb6203079166dc2cfc261c61f15",
                            "entryHashSkiplink": "0020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7d",
                            "seqNum": 4,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                            "value": "006346e6d283c665f7e75034b42da6856b7b333425d9d5d12498eaa265cfa52db701040020ecf6b707750f14ee86b6c1358f458d6967d8a42d6672e6a607adc4e0936f7e7d00206b0ede2a726382da6cc9a382c9a0c4370d5fefb6203079166dc2cfc261c61f159b0020a318cfb5ecb14de059ae3c9a3d18d52177c02344fdd6daf616b40dd9c989014f018219c75f10ebfd5b28d7d5f2b17f3a43cdd6d9451149a0fcc496f83dcc49820b5650b534c170e57ff4c6bceeeca1caeaec709589c05442d314215495f62d00"
                        },
                        {
                            "name": "messageEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e02666669656c6473a1676d657373616765a26474797065637374726576616c7565754c6574277320747279207468617420616761696e2e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020e14cdf2eb12187424d86fc9a66faae4718a6a4cfe1fe4cdb1a615ded90387f20",
                            "entryHashSkiplink": null,
                            "seqNum": 5,
                            "logId": 1
                        }
                    }
                }
            ]
        }
    ]
}