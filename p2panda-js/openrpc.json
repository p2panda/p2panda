{
    "openrpc": "1.0.0-rc1",
    "info": {
        "title": "p2panda RPC interface",
        "version": "0.0.1",
        "description": "The API for a p2panda node which can be used for creating and retrieving entries on a Bamboo append-only log.",
        "contact": {
            "name": "p2panda Team",
            "email": "contributors@p2panda.org",
            "url": "https://p2panda.org"
        },
        "license": {
            "name": "GNU Affero General Public License v3.0"
        }
    },
    "servers": [
        {
            "name": "p2panda node",
            "url": "https://welle.liebechaos.org"
        }
    ],
    "components": {
        "contentDescriptors": {
            "EntryArgs": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "Author": {
                "name": "author",
                "summary": "The public key of a p2panda author",
                "description": "Authors are hex encoded Ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "pattern": "[0-9a-f]{64}",
                    "minLength": 64,
                    "maxLength": 64
                }
            },
            "Schema": {
                "name": "schema",
                "summary": "The document view id of a p2panda schema",
                "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "oneOf": [
                        {
                            "const": "schema_definition_v1"
                        },
                        {
                            "const": "schema_field_definition_v1"
                        },
                        {
                            "type": "string",
                            "pattern": "[A-Za-z]{1}[A-Za-z0-9_]{0,63}_([0-9A-Za-z]{68})(_[0-9A-Za-z]{68})*"
                        }
                    ]
                }
            },
            "DocumentId": {
                "name": "document",
                "summary": "The hash identifying a document",
                "required": false,
                "schema": {
                    "type": "string",
                    "minLength": 68,
                    "maxLength": 68,
                    "pattern": "[0-9a-f]{68}"
                }
            },
            "QueryEntriesResponse": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "string"
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "Author": {
                "type": "string",
                "pattern": "[0-9a-f]{64}",
                "minLength": 64,
                "maxLength": 64
            },
            "Hash": {
                "type": "string",
                "minLength": 68,
                "maxLength": 68,
                "pattern": "[0-9a-f]{68}"
            },
            "SchemaId": {
                "oneOf": [
                    {
                        "const": "schema_definition_v1"
                    },
                    {
                        "const": "schema_field_definition_v1"
                    },
                    {
                        "type": "string",
                        "pattern": "[A-Za-z]{1}[A-Za-z0-9_]{0,63}_([0-9A-Za-z]{68})(_[0-9A-Za-z]{68})*"
                    }
                ]
            },
            "EntryArgs": {
                "type": "object",
                "properties": {
                    "entryHashSkiplink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "entryHashBacklink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "seqNum": {
                        "type": "string"
                    },
                    "logId": {
                        "type": "string"
                    }
                }
            },
            "Entry": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    },
                    "entryBytes": {
                        "type": "string"
                    },
                    "entryHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "logId": {
                        "type": "string"
                    },
                    "payloadBytes": {
                        "type": "string"
                    },
                    "payloadHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "seqNum": {
                        "type": "string"
                    }
                }
            },
            "EntryEncoded": {
                "type": "string"
            },
            "OperationEncoded": {
                "type": "string"
            },
            "Entries": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "author": {
                            "type": "string",
                            "pattern": "[0-9a-f]{64}",
                            "minLength": 64,
                            "maxLength": 64
                        },
                        "entryBytes": {
                            "type": "string"
                        },
                        "entryHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "logId": {
                            "type": "string"
                        },
                        "payloadBytes": {
                            "type": "string"
                        },
                        "payloadHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "seqNum": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "examples": {
            "Entry1": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                "value": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb030101a200204b771d59d76e820cbae493682003e99b795e4e7c86a8d6b4c9ad836dc4c9bf1d3970fb39f21542099ba2fbfd6ec5076152f26c02445c621b43a7e2898d203048ec9f35d8c2a1547f2b83da8e06cadd8a60bb45d3b500451e63f7cccbcbd64d09"
            },
            "Entry2": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                "value": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03010200201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c16f8fa0020f96e290e8f7ed747aefe0074b2f7aa678d4c7aff6877ad9344832a94132c55afa3cff41ccc91fe6b78be6dc6ff4e9c10787f7f1df4140bf56558e58fab806c7e76790901e350f6c8255dc0812cf3a7f1e0cecfba93495817b1ad5ed2f63dae0d"
            },
            "Entry3": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                "value": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb0301030020b7188ef505c499bf6d2d4a121e0535285fd444105b3d0b141429880bbb6cf31bf8fd00201c1ab5953daf80ad6636a246dba4de8424209755043acd7d85b01f930fd279fd9d9e38b66142d0a5e6c9bb0284044c92bdd00f0a98bce23d64a121115d1acee0714546a52781450fbede4503839b806e4fe99d2ccbc7985dac17dad25bc7d40e"
            },
            "Entry4": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                "value": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03010400201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c160020a93a4c8b92b4c4e15bd38703a806015bc9f1e72d93e577a29ed73b09bcf9a2b5c60020bc70f67db1bfb2be8bbcf9f870884e247a519ff3fce02c7a60aef90cadce7d65619dbc18c61e2ec9842347944b7c61d08db471246a802aebb1eca95a1171b51b1f1a477887572861f0338359140718bcbe2737bf01f9c6f89dbf0afd6ea24a06"
            },
            "Operation1": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6663726561746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
            },
            "Operation2": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323031633232316235373362316530633637633565326336323461393334313937373463646634366233643632343134633434613639386466313233376231633136666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
            },
            "Operation3": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323062373138386566353035633439396266366432643461313231653035333532383566643434343130356233643062313431343239383830626262366366333162666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e"
            },
            "Operation4": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6664656c65746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323061393361346338623932623463346531356264333837303361383036303135626339663165373264393365353737613239656437336230396263663961326235"
            },
            "EntryArgs1": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the first `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": null,
                    "entryHashSkiplink": null,
                    "seqNum": "1",
                    "logId": "1"
                }
            },
            "EntryArgs2": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the second `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "00201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c16",
                    "entryHashSkiplink": null,
                    "seqNum": "2",
                    "logId": "1"
                }
            },
            "EntryArgs3": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the third `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020b7188ef505c499bf6d2d4a121e0535285fd444105b3d0b141429880bbb6cf31b",
                    "entryHashSkiplink": null,
                    "seqNum": "3",
                    "logId": "1"
                }
            },
            "EntryArgs4": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020a93a4c8b92b4c4e15bd38703a806015bc9f1e72d93e577a29ed73b09bcf9a2b5",
                    "entryHashSkiplink": "00201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c16",
                    "seqNum": "4",
                    "logId": "1"
                }
            },
            "EntryArgs5": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020172f7b7785956aa5a610d5cbe7b1a80a28e32a1d86ad24cfd82ccbd9c3f5c178",
                    "entryHashSkiplink": null,
                    "seqNum": "5",
                    "logId": "1"
                }
            },
            "Author": {
                "name": "author",
                "summary": "The `Author` of the test log.",
                "value": "bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03"
            },
            "Schema": {
                "name": "schema",
                "summary": "The used `Schema` for the application data",
                "value": "venue_0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
            },
            "DocumentId": {
                "name": "document",
                "summary": "The `DocumentId` which this log is assigned",
                "value": "00201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c16"
            },
            "Entries": {
                "name": "entries",
                "summary": "All `Entries` in the test Log",
                "value": {
                    "entries": [
                        {
                            "author": "bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03",
                            "entryBytes": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb030101a200204b771d59d76e820cbae493682003e99b795e4e7c86a8d6b4c9ad836dc4c9bf1d3970fb39f21542099ba2fbfd6ec5076152f26c02445c621b43a7e2898d203048ec9f35d8c2a1547f2b83da8e06cadd8a60bb45d3b500451e63f7cccbcbd64d09",
                            "entryHash": "00201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c16",
                            "payloadBytes": "a466616374696f6e6663726561746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                            "payloadHash": "00204b771d59d76e820cbae493682003e99b795e4e7c86a8d6b4c9ad836dc4c9bf1d",
                            "logId": "1",
                            "seqNum": "1"
                        },
                        {
                            "author": "bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03",
                            "entryBytes": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03010200201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c16f8fa0020f96e290e8f7ed747aefe0074b2f7aa678d4c7aff6877ad9344832a94132c55afa3cff41ccc91fe6b78be6dc6ff4e9c10787f7f1df4140bf56558e58fab806c7e76790901e350f6c8255dc0812cf3a7f1e0cecfba93495817b1ad5ed2f63dae0d",
                            "entryHash": "0020b7188ef505c499bf6d2d4a121e0535285fd444105b3d0b141429880bbb6cf31b",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323031633232316235373362316530633637633565326336323461393334313937373463646634366233643632343134633434613639386466313233376231633136666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                            "payloadHash": "0020f96e290e8f7ed747aefe0074b2f7aa678d4c7aff6877ad9344832a94132c55af",
                            "logId": "1",
                            "seqNum": "2"
                        },
                        {
                            "author": "bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03",
                            "entryBytes": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb0301030020b7188ef505c499bf6d2d4a121e0535285fd444105b3d0b141429880bbb6cf31bf8fd00201c1ab5953daf80ad6636a246dba4de8424209755043acd7d85b01f930fd279fd9d9e38b66142d0a5e6c9bb0284044c92bdd00f0a98bce23d64a121115d1acee0714546a52781450fbede4503839b806e4fe99d2ccbc7985dac17dad25bc7d40e",
                            "entryHash": "0020a93a4c8b92b4c4e15bd38703a806015bc9f1e72d93e577a29ed73b09bcf9a2b5",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323062373138386566353035633439396266366432643461313231653035333532383566643434343130356233643062313431343239383830626262366366333162666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e",
                            "payloadHash": "00201c1ab5953daf80ad6636a246dba4de8424209755043acd7d85b01f930fd279fd",
                            "logId": "1",
                            "seqNum": "3"
                        },
                        {
                            "author": "bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03",
                            "entryBytes": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03010400201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c160020a93a4c8b92b4c4e15bd38703a806015bc9f1e72d93e577a29ed73b09bcf9a2b5c60020bc70f67db1bfb2be8bbcf9f870884e247a519ff3fce02c7a60aef90cadce7d65619dbc18c61e2ec9842347944b7c61d08db471246a802aebb1eca95a1171b51b1f1a477887572861f0338359140718bcbe2737bf01f9c6f89dbf0afd6ea24a06",
                            "entryHash": "0020172f7b7785956aa5a610d5cbe7b1a80a28e32a1d86ad24cfd82ccbd9c3f5c178",
                            "payloadBytes": "a466616374696f6e6664656c65746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323061393361346338623932623463346531356264333837303361383036303135626339663165373264393365353737613239656437336230396263663961326235",
                            "payloadHash": "0020bc70f67db1bfb2be8bbcf9f870884e247a519ff3fce02c7a60aef90cadce7d65",
                            "logId": "1",
                            "seqNum": "4"
                        }
                    ]
                }
            }
        }
    },
    "methods": [
        {
            "name": "panda_getEntryArguments",
            "summary": "Returns arguments needed for constructing the next entry given author and document id.",
            "description": "Fetch the required arguments needed when constructing and publishing an `Entry` to a p2panda log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "author",
                    "summary": "The public key of a p2panda author",
                    "description": "Authors are hex encoded Ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    }
                },
                {
                    "name": "document",
                    "summary": "The hash identifying a document",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example `Entry` arguments request.",
                    "summary": "An example of a valid parameters and response when making a request, based on test data.",
                    "params": [
                        {
                            "name": "author",
                            "summary": "The `Author` of the test log.",
                            "value": "bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03"
                        },
                        {
                            "name": "document",
                            "summary": "The `DocumentId` which this log is assigned",
                            "value": "00201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c16"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020172f7b7785956aa5a610d5cbe7b1a80a28e32a1d86ad24cfd82ccbd9c3f5c178",
                            "entryHashSkiplink": null,
                            "seqNum": "5",
                            "logId": "1"
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_queryEntries",
            "summary": "Query node for encoded entries of a given schema.",
            "description": "This method returns all entries of a given schema. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "schema",
                    "summary": "The document view id of a p2panda schema",
                    "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "oneOf": [
                            {
                                "const": "schema_definition_v1"
                            },
                            {
                                "const": "schema_field_definition_v1"
                            },
                            {
                                "type": "string",
                                "pattern": "[A-Za-z]{1}[A-Za-z0-9_]{0,63}_([0-9A-Za-z]{68})(_[0-9A-Za-z]{68})*"
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "string"
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example request for the next `Entry` arguments",
                    "summary": "The parameters and response when making this request according to the test data.",
                    "params": [
                        {
                            "name": "schema",
                            "summary": "The used `Schema` for the application data",
                            "value": "venue_0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
                        }
                    ],
                    "result": {
                        "name": "entries",
                        "summary": "All `Entries` in the test Log",
                        "value": {
                            "entries": [
                                {
                                    "author": "bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03",
                                    "entryBytes": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb030101a200204b771d59d76e820cbae493682003e99b795e4e7c86a8d6b4c9ad836dc4c9bf1d3970fb39f21542099ba2fbfd6ec5076152f26c02445c621b43a7e2898d203048ec9f35d8c2a1547f2b83da8e06cadd8a60bb45d3b500451e63f7cccbcbd64d09",
                                    "entryHash": "00201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c16",
                                    "payloadBytes": "a466616374696f6e6663726561746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                                    "payloadHash": "00204b771d59d76e820cbae493682003e99b795e4e7c86a8d6b4c9ad836dc4c9bf1d",
                                    "logId": "1",
                                    "seqNum": "1"
                                },
                                {
                                    "author": "bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03",
                                    "entryBytes": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03010200201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c16f8fa0020f96e290e8f7ed747aefe0074b2f7aa678d4c7aff6877ad9344832a94132c55afa3cff41ccc91fe6b78be6dc6ff4e9c10787f7f1df4140bf56558e58fab806c7e76790901e350f6c8255dc0812cf3a7f1e0cecfba93495817b1ad5ed2f63dae0d",
                                    "entryHash": "0020b7188ef505c499bf6d2d4a121e0535285fd444105b3d0b141429880bbb6cf31b",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323031633232316235373362316530633637633565326336323461393334313937373463646634366233643632343134633434613639386466313233376231633136666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                                    "payloadHash": "0020f96e290e8f7ed747aefe0074b2f7aa678d4c7aff6877ad9344832a94132c55af",
                                    "logId": "1",
                                    "seqNum": "2"
                                },
                                {
                                    "author": "bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03",
                                    "entryBytes": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb0301030020b7188ef505c499bf6d2d4a121e0535285fd444105b3d0b141429880bbb6cf31bf8fd00201c1ab5953daf80ad6636a246dba4de8424209755043acd7d85b01f930fd279fd9d9e38b66142d0a5e6c9bb0284044c92bdd00f0a98bce23d64a121115d1acee0714546a52781450fbede4503839b806e4fe99d2ccbc7985dac17dad25bc7d40e",
                                    "entryHash": "0020a93a4c8b92b4c4e15bd38703a806015bc9f1e72d93e577a29ed73b09bcf9a2b5",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323062373138386566353035633439396266366432643461313231653035333532383566643434343130356233643062313431343239383830626262366366333162666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e",
                                    "payloadHash": "00201c1ab5953daf80ad6636a246dba4de8424209755043acd7d85b01f930fd279fd",
                                    "logId": "1",
                                    "seqNum": "3"
                                },
                                {
                                    "author": "bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03",
                                    "entryBytes": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03010400201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c160020a93a4c8b92b4c4e15bd38703a806015bc9f1e72d93e577a29ed73b09bcf9a2b5c60020bc70f67db1bfb2be8bbcf9f870884e247a519ff3fce02c7a60aef90cadce7d65619dbc18c61e2ec9842347944b7c61d08db471246a802aebb1eca95a1171b51b1f1a477887572861f0338359140718bcbe2737bf01f9c6f89dbf0afd6ea24a06",
                                    "entryHash": "0020172f7b7785956aa5a610d5cbe7b1a80a28e32a1d86ad24cfd82ccbd9c3f5c178",
                                    "payloadBytes": "a466616374696f6e6664656c65746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323061393361346338623932623463346531356264333837303361383036303135626339663165373264393365353737613239656437336230396263663961326235",
                                    "payloadHash": "0020bc70f67db1bfb2be8bbcf9f870884e247a519ff3fce02c7a60aef90cadce7d65",
                                    "logId": "1",
                                    "seqNum": "4"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_publishEntry",
            "summary": "Publish an encoded entry and operation.",
            "description": "Publish a new `Entry` to a `p2panda` log. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "entryEncoded",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "operationEncoded",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                            "value": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb030101a200204b771d59d76e820cbae493682003e99b795e4e7c86a8d6b4c9ad836dc4c9bf1d3970fb39f21542099ba2fbfd6ec5076152f26c02445c621b43a7e2898d203048ec9f35d8c2a1547f2b83da8e06cadd8a60bb45d3b500451e63f7cccbcbd64d09"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6663726561746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the second `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c16",
                            "entryHashSkiplink": null,
                            "seqNum": "2",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                            "value": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03010200201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c16f8fa0020f96e290e8f7ed747aefe0074b2f7aa678d4c7aff6877ad9344832a94132c55afa3cff41ccc91fe6b78be6dc6ff4e9c10787f7f1df4140bf56558e58fab806c7e76790901e350f6c8255dc0812cf3a7f1e0cecfba93495817b1ad5ed2f63dae0d"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323031633232316235373362316530633637633565326336323461393334313937373463646634366233643632343134633434613639386466313233376231633136666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the third `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020b7188ef505c499bf6d2d4a121e0535285fd444105b3d0b141429880bbb6cf31b",
                            "entryHashSkiplink": null,
                            "seqNum": "3",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                            "value": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb0301030020b7188ef505c499bf6d2d4a121e0535285fd444105b3d0b141429880bbb6cf31bf8fd00201c1ab5953daf80ad6636a246dba4de8424209755043acd7d85b01f930fd279fd9d9e38b66142d0a5e6c9bb0284044c92bdd00f0a98bce23d64a121115d1acee0714546a52781450fbede4503839b806e4fe99d2ccbc7985dac17dad25bc7d40e"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323062373138386566353035633439396266366432643461313231653035333532383566643434343130356233643062313431343239383830626262366366333162666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020a93a4c8b92b4c4e15bd38703a806015bc9f1e72d93e577a29ed73b09bcf9a2b5",
                            "entryHashSkiplink": "00201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c16",
                            "seqNum": "4",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                            "value": "00bedabb435758855968b3e2de2aa1f653adfbb392fcf9cb2295a68b2eca3cfb03010400201c221b573b1e0c67c5e2c624a93419774cdf46b3d62414c44a698df1237b1c160020a93a4c8b92b4c4e15bd38703a806015bc9f1e72d93e577a29ed73b09bcf9a2b5c60020bc70f67db1bfb2be8bbcf9f870884e247a519ff3fce02c7a60aef90cadce7d65619dbc18c61e2ec9842347944b7c61d08db471246a802aebb1eca95a1171b51b1f1a477887572861f0338359140718bcbe2737bf01f9c6f89dbf0afd6ea24a06"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6664656c65746566736368656d61784a76656e75655f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323061393361346338623932623463346531356264333837303361383036303135626339663165373264393365353737613239656437336230396263663961326235"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020172f7b7785956aa5a610d5cbe7b1a80a28e32a1d86ad24cfd82ccbd9c3f5c178",
                            "entryHashSkiplink": null,
                            "seqNum": "5",
                            "logId": "1"
                        }
                    }
                }
            ]
        }
    ]
}