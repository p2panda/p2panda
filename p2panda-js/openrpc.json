{
    "openrpc": "1.0.0-rc1",
    "info": {
        "title": "p2panda RPC interface",
        "version": "0.0.1",
        "description": "The API for a p2panda node which can be used for creating and retrieving entries on a Bamboo append-only log.",
        "contact": {
            "name": "p2panda Team",
            "email": "contributors@p2panda.org",
            "url": "https://p2panda.org"
        },
        "license": {
            "name": "GNU Affero General Public License v3.0"
        }
    },
    "servers": [
        {
            "name": "p2panda node",
            "url": "https://welle.liebechaos.org"
        }
    ],
    "components": {
        "contentDescriptors": {
            "EntryArgs": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "Author": {
                "name": "author",
                "summary": "The public key of a p2panda author",
                "description": "Authors are hex encoded ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "pattern": "[0-9a-f]{64}",
                    "minLength": 64,
                    "maxLength": 64
                }
            },
            "Schema": {
                "name": "schema",
                "summary": "The hash of a p2panda schema",
                "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "minLength": 68,
                    "maxLength": 68,
                    "pattern": "[0-9a-f]{68}"
                }
            },
            "DocumentId": {
                "name": "document",
                "summary": "The hash identifying a document",
                "required": false,
                "schema": {
                    "type": "string",
                    "minLength": 68,
                    "maxLength": 68,
                    "pattern": "[0-9a-f]{68}"
                }
            },
            "QueryEntriesResponse": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "number",
                                "minimum": 1
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "number",
                                "minimum": 1
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "Author": {
                "type": "string",
                "pattern": "[0-9a-f]{64}",
                "minLength": 64,
                "maxLength": 64
            },
            "Hash": {
                "type": "string",
                "minLength": 68,
                "maxLength": 68,
                "pattern": "[0-9a-f]{68}"
            },
            "EntryArgs": {
                "type": "object",
                "properties": {
                    "entryHashSkiplink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "entryHashBacklink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "seqNum": {
                        "type": "number",
                        "minimum": 1
                    },
                    "logId": {
                        "type": "number",
                        "minimum": 1
                    }
                }
            },
            "Entry": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    },
                    "entryBytes": {
                        "type": "string"
                    },
                    "entryHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "logId": {
                        "type": "number",
                        "minimum": 1
                    },
                    "payloadBytes": {
                        "type": "string"
                    },
                    "payloadHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "seqNum": {
                        "type": "number",
                        "minimum": 1
                    }
                }
            },
            "EntryEncoded": {
                "type": "string"
            },
            "OperationEncoded": {
                "type": "string"
            },
            "Entries": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "author": {
                            "type": "string",
                            "pattern": "[0-9a-f]{64}",
                            "minLength": 64,
                            "maxLength": 64
                        },
                        "entryBytes": {
                            "type": "string"
                        },
                        "entryHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        },
                        "payloadBytes": {
                            "type": "string"
                        },
                        "payloadHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            }
        },
        "examples": {
            "Entry1": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                "value": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c01019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494b4818561f5383ad16151cad852ae80c2384776202e20869ad3e83ee960d9c6c4203285885e589d98ee1b3af0f33fa82db64e07f8bfb472d5e1085c12c5a5340e"
            },
            "Entry2": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                "value": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c0102002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22ae200203eba49224859f8724e1e78ff8c502e4cddc56fc597372b28ff1e904e20f293c2f94feaf940ca34177cd70f7193c593d1f9c478ee7dfb828963a389ac92ef5b46407b0b0cebe63c7c63113b4913df5f61ed87aadbfe1ceb91f826a44d68b14d0a"
            },
            "Entry3": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                "value": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c01030020a49d4c3f98adcdc9ab91d6aba6030e71158770b0fa33b92d7ab3c47105896c40e50020ae52259c8f60ae132cfdc93abfe9fc65a476dcfb1836028ab61bf8c7fd8c3f8322ac9df25b38e05063ae33004dc801f78cef8675cc45b8814e5024d9cf0a6c0a200b0950ec30eb2229502ff49a011872b5810ce5e9148cfd97fa82c04cd3dc09"
            },
            "Entry4": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                "value": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c0104002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22a00203a1d2706fcd0317058780526010bb0c48df2c6cd70e3b4b79afed77d69b0a100ae0020336925f92ef117b6370bf2c384af7bd3dfd74d5ce85fe83d16f97b4c5dcf62d5a46d12dc35994cf79ebec9ae028df9686f0f3e380991decc1b38f6517f388c6875713d9f97ee273fd10224738fa2490914516d73725dc7fb44724a381f5b0305"
            },
            "Operation1": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
            },
            "Operation2": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323036323535393037326532656537613265383737633836363238343862373834613562383130393661366463303236376136326439616137353132663564323261666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
            },
            "Operation3": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323036323535393037326532656537613265383737633836363238343862373834613562383130393661366463303236376136326439616137353132663564323261666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e"
            },
            "Operation4": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323036323535393037326532656537613265383737633836363238343862373834613562383130393661366463303236376136326439616137353132663564323261"
            },
            "EntryArgs1": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the first `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": null,
                    "entryHashSkiplink": null,
                    "seqNum": 1,
                    "logId": 1
                }
            },
            "EntryArgs2": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the second `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22a",
                    "entryHashSkiplink": null,
                    "seqNum": 2,
                    "logId": 1
                }
            },
            "EntryArgs3": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the third `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020a49d4c3f98adcdc9ab91d6aba6030e71158770b0fa33b92d7ab3c47105896c40",
                    "entryHashSkiplink": null,
                    "seqNum": 3,
                    "logId": 1
                }
            },
            "EntryArgs4": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "00203a1d2706fcd0317058780526010bb0c48df2c6cd70e3b4b79afed77d69b0a100",
                    "entryHashSkiplink": "002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22a",
                    "seqNum": 4,
                    "logId": 1
                }
            },
            "EntryArgs5": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "00200a65d50bacd0a8b6ab7afbf4ef11aa5be81ef335e09be6414a48add46cc28a75",
                    "entryHashSkiplink": null,
                    "seqNum": 5,
                    "logId": 1
                }
            },
            "Author": {
                "name": "author",
                "summary": "The `Author` of the test log.",
                "value": "16c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c"
            },
            "Schema": {
                "name": "schema",
                "summary": "The used `Schema` for the application data",
                "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
            },
            "DocumentId": {
                "name": "document",
                "summary": "The `DocumentId` which this log is assigned",
                "value": "002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22a"
            },
            "Entries": {
                "name": "entries",
                "summary": "All `Entries` in the test Log",
                "value": {
                    "entries": [
                        {
                            "author": "16c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c",
                            "entryBytes": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c01019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494b4818561f5383ad16151cad852ae80c2384776202e20869ad3e83ee960d9c6c4203285885e589d98ee1b3af0f33fa82db64e07f8bfb472d5e1085c12c5a5340e",
                            "entryHash": "002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22a",
                            "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                            "payloadHash": "0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494",
                            "logId": 1,
                            "seqNum": 1
                        },
                        {
                            "author": "16c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c",
                            "entryBytes": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c0102002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22ae200203eba49224859f8724e1e78ff8c502e4cddc56fc597372b28ff1e904e20f293c2f94feaf940ca34177cd70f7193c593d1f9c478ee7dfb828963a389ac92ef5b46407b0b0cebe63c7c63113b4913df5f61ed87aadbfe1ceb91f826a44d68b14d0a",
                            "entryHash": "0020a49d4c3f98adcdc9ab91d6aba6030e71158770b0fa33b92d7ab3c47105896c40",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323036323535393037326532656537613265383737633836363238343862373834613562383130393661366463303236376136326439616137353132663564323261666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                            "payloadHash": "00203eba49224859f8724e1e78ff8c502e4cddc56fc597372b28ff1e904e20f293c2",
                            "logId": 1,
                            "seqNum": 2
                        },
                        {
                            "author": "16c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c",
                            "entryBytes": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c01030020a49d4c3f98adcdc9ab91d6aba6030e71158770b0fa33b92d7ab3c47105896c40e50020ae52259c8f60ae132cfdc93abfe9fc65a476dcfb1836028ab61bf8c7fd8c3f8322ac9df25b38e05063ae33004dc801f78cef8675cc45b8814e5024d9cf0a6c0a200b0950ec30eb2229502ff49a011872b5810ce5e9148cfd97fa82c04cd3dc09",
                            "entryHash": "00203a1d2706fcd0317058780526010bb0c48df2c6cd70e3b4b79afed77d69b0a100",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323036323535393037326532656537613265383737633836363238343862373834613562383130393661366463303236376136326439616137353132663564323261666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e",
                            "payloadHash": "0020ae52259c8f60ae132cfdc93abfe9fc65a476dcfb1836028ab61bf8c7fd8c3f83",
                            "logId": 1,
                            "seqNum": 3
                        },
                        {
                            "author": "16c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c",
                            "entryBytes": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c0104002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22a00203a1d2706fcd0317058780526010bb0c48df2c6cd70e3b4b79afed77d69b0a100ae0020336925f92ef117b6370bf2c384af7bd3dfd74d5ce85fe83d16f97b4c5dcf62d5a46d12dc35994cf79ebec9ae028df9686f0f3e380991decc1b38f6517f388c6875713d9f97ee273fd10224738fa2490914516d73725dc7fb44724a381f5b0305",
                            "entryHash": "00200a65d50bacd0a8b6ab7afbf4ef11aa5be81ef335e09be6414a48add46cc28a75",
                            "payloadBytes": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323036323535393037326532656537613265383737633836363238343862373834613562383130393661366463303236376136326439616137353132663564323261",
                            "payloadHash": "0020336925f92ef117b6370bf2c384af7bd3dfd74d5ce85fe83d16f97b4c5dcf62d5",
                            "logId": 1,
                            "seqNum": 4
                        }
                    ]
                }
            }
        }
    },
    "methods": [
        {
            "name": "panda_getEntryArguments",
            "summary": "Returns arguments needed for constructing the next entry given author and document id.",
            "description": "Fetch the required arguments needed when constructing and publishing an `Entry` to a p2panda log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "author",
                    "summary": "The public key of a p2panda author",
                    "description": "Authors are hex encoded ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    }
                },
                {
                    "name": "document",
                    "summary": "The hash identifying a document",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example `Entry` arguments request.",
                    "summary": "An example of a valid parameters and response when making a request, based on test data.",
                    "params": [
                        {
                            "name": "author",
                            "summary": "The `Author` of the test log.",
                            "value": "16c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c"
                        },
                        {
                            "name": "document",
                            "summary": "The `DocumentId` which this log is assigned",
                            "value": "002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22a"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00200a65d50bacd0a8b6ab7afbf4ef11aa5be81ef335e09be6414a48add46cc28a75",
                            "entryHashSkiplink": null,
                            "seqNum": 5,
                            "logId": 1
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_queryEntries",
            "summary": "Query node for encoded entries of a given schema.",
            "description": "This method returns all entries of a given schema. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "schema",
                    "summary": "The hash of a p2panda schema",
                    "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "number",
                                "minimum": 1
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "number",
                                "minimum": 1
                            }
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example request for the next `Entry` arguments",
                    "summary": "The parameters and response when making this request according to the test data.",
                    "params": [
                        {
                            "name": "schema",
                            "summary": "The used `Schema` for the application data",
                            "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
                        }
                    ],
                    "result": {
                        "name": "entries",
                        "summary": "All `Entries` in the test Log",
                        "value": {
                            "entries": [
                                {
                                    "author": "16c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c",
                                    "entryBytes": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c01019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494b4818561f5383ad16151cad852ae80c2384776202e20869ad3e83ee960d9c6c4203285885e589d98ee1b3af0f33fa82db64e07f8bfb472d5e1085c12c5a5340e",
                                    "entryHash": "002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22a",
                                    "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                                    "payloadHash": "0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494",
                                    "logId": 1,
                                    "seqNum": 1
                                },
                                {
                                    "author": "16c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c",
                                    "entryBytes": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c0102002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22ae200203eba49224859f8724e1e78ff8c502e4cddc56fc597372b28ff1e904e20f293c2f94feaf940ca34177cd70f7193c593d1f9c478ee7dfb828963a389ac92ef5b46407b0b0cebe63c7c63113b4913df5f61ed87aadbfe1ceb91f826a44d68b14d0a",
                                    "entryHash": "0020a49d4c3f98adcdc9ab91d6aba6030e71158770b0fa33b92d7ab3c47105896c40",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323036323535393037326532656537613265383737633836363238343862373834613562383130393661366463303236376136326439616137353132663564323261666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                                    "payloadHash": "00203eba49224859f8724e1e78ff8c502e4cddc56fc597372b28ff1e904e20f293c2",
                                    "logId": 1,
                                    "seqNum": 2
                                },
                                {
                                    "author": "16c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c",
                                    "entryBytes": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c01030020a49d4c3f98adcdc9ab91d6aba6030e71158770b0fa33b92d7ab3c47105896c40e50020ae52259c8f60ae132cfdc93abfe9fc65a476dcfb1836028ab61bf8c7fd8c3f8322ac9df25b38e05063ae33004dc801f78cef8675cc45b8814e5024d9cf0a6c0a200b0950ec30eb2229502ff49a011872b5810ce5e9148cfd97fa82c04cd3dc09",
                                    "entryHash": "00203a1d2706fcd0317058780526010bb0c48df2c6cd70e3b4b79afed77d69b0a100",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323036323535393037326532656537613265383737633836363238343862373834613562383130393661366463303236376136326439616137353132663564323261666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e",
                                    "payloadHash": "0020ae52259c8f60ae132cfdc93abfe9fc65a476dcfb1836028ab61bf8c7fd8c3f83",
                                    "logId": 1,
                                    "seqNum": 3
                                },
                                {
                                    "author": "16c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c",
                                    "entryBytes": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c0104002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22a00203a1d2706fcd0317058780526010bb0c48df2c6cd70e3b4b79afed77d69b0a100ae0020336925f92ef117b6370bf2c384af7bd3dfd74d5ce85fe83d16f97b4c5dcf62d5a46d12dc35994cf79ebec9ae028df9686f0f3e380991decc1b38f6517f388c6875713d9f97ee273fd10224738fa2490914516d73725dc7fb44724a381f5b0305",
                                    "entryHash": "00200a65d50bacd0a8b6ab7afbf4ef11aa5be81ef335e09be6414a48add46cc28a75",
                                    "payloadBytes": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323036323535393037326532656537613265383737633836363238343862373834613562383130393661366463303236376136326439616137353132663564323261",
                                    "payloadHash": "0020336925f92ef117b6370bf2c384af7bd3dfd74d5ce85fe83d16f97b4c5dcf62d5",
                                    "logId": 1,
                                    "seqNum": 4
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_publishEntry",
            "summary": "Publish an encoded entry and operation.",
            "description": "Publish a new `Entry` to a `p2panda` log. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "entryEncoded",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "operationEncoded",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                            "value": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c01019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494b4818561f5383ad16151cad852ae80c2384776202e20869ad3e83ee960d9c6c4203285885e589d98ee1b3af0f33fa82db64e07f8bfb472d5e1085c12c5a5340e"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the second `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22a",
                            "entryHashSkiplink": null,
                            "seqNum": 2,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                            "value": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c0102002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22ae200203eba49224859f8724e1e78ff8c502e4cddc56fc597372b28ff1e904e20f293c2f94feaf940ca34177cd70f7193c593d1f9c478ee7dfb828963a389ac92ef5b46407b0b0cebe63c7c63113b4913df5f61ed87aadbfe1ceb91f826a44d68b14d0a"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323036323535393037326532656537613265383737633836363238343862373834613562383130393661366463303236376136326439616137353132663564323261666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the third `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020a49d4c3f98adcdc9ab91d6aba6030e71158770b0fa33b92d7ab3c47105896c40",
                            "entryHashSkiplink": null,
                            "seqNum": 3,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                            "value": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c01030020a49d4c3f98adcdc9ab91d6aba6030e71158770b0fa33b92d7ab3c47105896c40e50020ae52259c8f60ae132cfdc93abfe9fc65a476dcfb1836028ab61bf8c7fd8c3f8322ac9df25b38e05063ae33004dc801f78cef8675cc45b8814e5024d9cf0a6c0a200b0950ec30eb2229502ff49a011872b5810ce5e9148cfd97fa82c04cd3dc09"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323036323535393037326532656537613265383737633836363238343862373834613562383130393661366463303236376136326439616137353132663564323261666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00203a1d2706fcd0317058780526010bb0c48df2c6cd70e3b4b79afed77d69b0a100",
                            "entryHashSkiplink": "002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22a",
                            "seqNum": 4,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                            "value": "0016c0fc8e3c0a9e56333eca1f5084b3971efdb32e4e3620af79110f941919f42c0104002062559072e2ee7a2e877c8662848b784a5b81096a6dc0267a62d9aa7512f5d22a00203a1d2706fcd0317058780526010bb0c48df2c6cd70e3b4b79afed77d69b0a100ae0020336925f92ef117b6370bf2c384af7bd3dfd74d5ce85fe83d16f97b4c5dcf62d5a46d12dc35994cf79ebec9ae028df9686f0f3e380991decc1b38f6517f388c6875713d9f97ee273fd10224738fa2490914516d73725dc7fb44724a381f5b0305"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323036323535393037326532656537613265383737633836363238343862373834613562383130393661366463303236376136326439616137353132663564323261"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00200a65d50bacd0a8b6ab7afbf4ef11aa5be81ef335e09be6414a48add46cc28a75",
                            "entryHashSkiplink": null,
                            "seqNum": 5,
                            "logId": 1
                        }
                    }
                }
            ]
        }
    ]
}
