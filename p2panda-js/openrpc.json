{
    "openrpc": "1.0.0-rc1",
    "info": {
        "title": "p2panda RPC interface",
        "version": "0.0.1",
        "description": "The API for a p2panda node which can be used for creating and retrieving entries on a Bamboo append-only log.",
        "contact": {
            "name": "p2panda Team",
            "email": "contributors@p2panda.org",
            "url": "https://p2panda.org"
        },
        "license": {
            "name": "GNU Affero General Public License v3.0"
        }
    },
    "servers": [
        {
            "name": "p2panda node",
            "url": "https://welle.liebechaos.org"
        }
    ],
    "components": {
        "contentDescriptors": {
            "EntryArgs": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "Author": {
                "name": "author",
                "summary": "The public key of a p2panda author",
                "description": "Authors are hex encoded Ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "pattern": "[0-9a-f]{64}",
                    "minLength": 64,
                    "maxLength": 64
                }
            },
            "Schema": {
                "name": "schema",
                "summary": "The document view id of a p2panda schema",
                "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "oneOf": [
                        {
                            "const": "schema_definition_v1"
                        },
                        {
                            "const": "schema_field_definition_v1"
                        },
                        {
                            "type": "string",
                            "pattern": "[A-Za-z]{1}[A-Za-z0-9_]{0,63}_([0-9A-Za-z]{68})(_[0-9A-Za-z]{68})*"
                        }
                    ]
                }
            },
            "DocumentId": {
                "name": "document",
                "summary": "The hash identifying a document",
                "required": false,
                "schema": {
                    "type": "string",
                    "minLength": 68,
                    "maxLength": 68,
                    "pattern": "[0-9a-f]{68}"
                }
            },
            "QueryEntriesResponse": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "string"
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "Author": {
                "type": "string",
                "pattern": "[0-9a-f]{64}",
                "minLength": 64,
                "maxLength": 64
            },
            "Hash": {
                "type": "string",
                "minLength": 68,
                "maxLength": 68,
                "pattern": "[0-9a-f]{68}"
            },
            "SchemaId": {
                "oneOf": [
                    {
                        "const": "schema_definition_v1"
                    },
                    {
                        "const": "schema_field_definition_v1"
                    },
                    {
                        "type": "string",
                        "pattern": "[A-Za-z]{1}[A-Za-z0-9_]{0,63}_([0-9A-Za-z]{68})(_[0-9A-Za-z]{68})*"
                    }
                ]
            },
            "EntryArgs": {
                "type": "object",
                "properties": {
                    "entryHashSkiplink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "entryHashBacklink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "seqNum": {
                        "type": "string"
                    },
                    "logId": {
                        "type": "string"
                    }
                }
            },
            "Entry": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    },
                    "entryBytes": {
                        "type": "string"
                    },
                    "entryHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "logId": {
                        "type": "string"
                    },
                    "payloadBytes": {
                        "type": "string"
                    },
                    "payloadHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "seqNum": {
                        "type": "string"
                    }
                }
            },
            "EntryEncoded": {
                "type": "string"
            },
            "OperationEncoded": {
                "type": "string"
            },
            "Entries": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "author": {
                            "type": "string",
                            "pattern": "[0-9a-f]{64}",
                            "minLength": 64,
                            "maxLength": 64
                        },
                        "entryBytes": {
                            "type": "string"
                        },
                        "entryHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "logId": {
                            "type": "string"
                        },
                        "payloadBytes": {
                            "type": "string"
                        },
                        "payloadHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "seqNum": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "examples": {
            "Entry1": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                "value": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa9601301019600206005728510e5f9ddd44a2660eb684918b8d53db89d95ae8c43f8c0363184e44ce5f2a1f6e24053dffea276dccb102ef3b080fe25531df873308b3bc1dc12833f9710f1af0fcf5a4260ccf506aaafcf721a7326ca024a36d81a0b7f2e4f94fc06"
            },
            "Entry2": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                "value": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa9601301020020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675cee0020a52c330a91370cc53dc12da97f007118a050468aacdd80b44689b09506a18ad074c8f5416af727c2347debd19a5c0b7a4efc596973f85bb260c04c7d250dea5e50bce83939caab9cf6a0f65156572d472594726ee56a51d493b2975be8d4ab05"
            },
            "Entry3": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                "value": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa960130103002075ceac421b483ad5dc688c57e20249f8d12fcc58e3054762bfbfd631e24a74e3f10020bd81d62fe2ee96a1d1b87b819f3e2346c5f9a34b025c68bb7fa4a7de31cf045d9b358b931f5b19e3c2d2d8784888ea51cfcb6522f336c8f4c6ad99c9c96382820d13dd2820e40d2d01344c473d3009acece1847ebc2799bbeaced9fb15e8e202"
            },
            "Entry4": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                "value": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa9601301040020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675c002072fac8b939ce16cf71c5a9ae55c71776ef133de498c230462bdcf2320acdcf10c5002050ec4cea5fd81cddfd8c488381ff3b4565f316202c0d4634a6cf26ff10aeee42254a514fb7c5381f8cc2b6b04c00b0756e3cec6ef12409c53c199efd6a01d8a0fd4d3c1bcc29b9f368fd8e8988ffd1abee9d9c1393586a3d871e25477a421d01"
            },
            "Operation1": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6663726561746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a163737472764f68682c206d79206669727374206d65737361676521"
            },
            "Operation2": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323036343634393463333037396463353361646163656638373230326435333163396465316434343763623261336562636437383766373434646465653636373563666669656c6473a1676d657373616765a1637374727357686963682049206e6f77207570646174652e"
            },
            "Operation3": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323037356365616334323162343833616435646336383863353765323032343966386431326663633538653330353437363262666266643633316532346137346533666669656c6473a1676d657373616765a16373747276416e64207468656e2075706461746520616761696e2e"
            },
            "Operation4": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6664656c65746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323037326661633862393339636531366366373163356139616535356337313737366566313333646534393863323330343632626463663233323061636463663130"
            },
            "EntryArgs1": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the first `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": null,
                    "entryHashSkiplink": null,
                    "seqNum": "1",
                    "logId": "1"
                }
            },
            "EntryArgs2": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the second `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675c",
                    "entryHashSkiplink": null,
                    "seqNum": "2",
                    "logId": "1"
                }
            },
            "EntryArgs3": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the third `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "002075ceac421b483ad5dc688c57e20249f8d12fcc58e3054762bfbfd631e24a74e3",
                    "entryHashSkiplink": null,
                    "seqNum": "3",
                    "logId": "1"
                }
            },
            "EntryArgs4": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "002072fac8b939ce16cf71c5a9ae55c71776ef133de498c230462bdcf2320acdcf10",
                    "entryHashSkiplink": "0020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675c",
                    "seqNum": "4",
                    "logId": "1"
                }
            },
            "EntryArgs5": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "00209a8beac3b5d92045ddfe75df1e9b928267f4ac8829a4ac30af48d8a1c0c28c80",
                    "entryHashSkiplink": null,
                    "seqNum": "5",
                    "logId": "1"
                }
            },
            "Author": {
                "name": "author",
                "summary": "The `Author` of the test log.",
                "value": "41ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa96013"
            },
            "Schema": {
                "name": "schema",
                "summary": "The used `Schema` for the application data",
                "value": "chat_0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
            },
            "DocumentId": {
                "name": "document",
                "summary": "The `DocumentId` which this log is assigned",
                "value": "0020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675c"
            },
            "Entries": {
                "name": "entries",
                "summary": "All `Entries` in the test Log",
                "value": {
                    "entries": [
                        {
                            "author": "41ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa96013",
                            "entryBytes": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa9601301019600206005728510e5f9ddd44a2660eb684918b8d53db89d95ae8c43f8c0363184e44ce5f2a1f6e24053dffea276dccb102ef3b080fe25531df873308b3bc1dc12833f9710f1af0fcf5a4260ccf506aaafcf721a7326ca024a36d81a0b7f2e4f94fc06",
                            "entryHash": "0020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675c",
                            "payloadBytes": "a466616374696f6e6663726561746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a163737472764f68682c206d79206669727374206d65737361676521",
                            "payloadHash": "00206005728510e5f9ddd44a2660eb684918b8d53db89d95ae8c43f8c0363184e44c",
                            "logId": "1",
                            "seqNum": "1"
                        },
                        {
                            "author": "41ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa96013",
                            "entryBytes": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa9601301020020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675cee0020a52c330a91370cc53dc12da97f007118a050468aacdd80b44689b09506a18ad074c8f5416af727c2347debd19a5c0b7a4efc596973f85bb260c04c7d250dea5e50bce83939caab9cf6a0f65156572d472594726ee56a51d493b2975be8d4ab05",
                            "entryHash": "002075ceac421b483ad5dc688c57e20249f8d12fcc58e3054762bfbfd631e24a74e3",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323036343634393463333037396463353361646163656638373230326435333163396465316434343763623261336562636437383766373434646465653636373563666669656c6473a1676d657373616765a1637374727357686963682049206e6f77207570646174652e",
                            "payloadHash": "0020a52c330a91370cc53dc12da97f007118a050468aacdd80b44689b09506a18ad0",
                            "logId": "1",
                            "seqNum": "2"
                        },
                        {
                            "author": "41ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa96013",
                            "entryBytes": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa960130103002075ceac421b483ad5dc688c57e20249f8d12fcc58e3054762bfbfd631e24a74e3f10020bd81d62fe2ee96a1d1b87b819f3e2346c5f9a34b025c68bb7fa4a7de31cf045d9b358b931f5b19e3c2d2d8784888ea51cfcb6522f336c8f4c6ad99c9c96382820d13dd2820e40d2d01344c473d3009acece1847ebc2799bbeaced9fb15e8e202",
                            "entryHash": "002072fac8b939ce16cf71c5a9ae55c71776ef133de498c230462bdcf2320acdcf10",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323037356365616334323162343833616435646336383863353765323032343966386431326663633538653330353437363262666266643633316532346137346533666669656c6473a1676d657373616765a16373747276416e64207468656e2075706461746520616761696e2e",
                            "payloadHash": "0020bd81d62fe2ee96a1d1b87b819f3e2346c5f9a34b025c68bb7fa4a7de31cf045d",
                            "logId": "1",
                            "seqNum": "3"
                        },
                        {
                            "author": "41ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa96013",
                            "entryBytes": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa9601301040020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675c002072fac8b939ce16cf71c5a9ae55c71776ef133de498c230462bdcf2320acdcf10c5002050ec4cea5fd81cddfd8c488381ff3b4565f316202c0d4634a6cf26ff10aeee42254a514fb7c5381f8cc2b6b04c00b0756e3cec6ef12409c53c199efd6a01d8a0fd4d3c1bcc29b9f368fd8e8988ffd1abee9d9c1393586a3d871e25477a421d01",
                            "entryHash": "00209a8beac3b5d92045ddfe75df1e9b928267f4ac8829a4ac30af48d8a1c0c28c80",
                            "payloadBytes": "a466616374696f6e6664656c65746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323037326661633862393339636531366366373163356139616535356337313737366566313333646534393863323330343632626463663233323061636463663130",
                            "payloadHash": "002050ec4cea5fd81cddfd8c488381ff3b4565f316202c0d4634a6cf26ff10aeee42",
                            "logId": "1",
                            "seqNum": "4"
                        }
                    ]
                }
            }
        }
    },
    "methods": [
        {
            "name": "panda_getEntryArguments",
            "summary": "Returns arguments needed for constructing the next entry given author and document id.",
            "description": "Fetch the required arguments needed when constructing and publishing an `Entry` to a p2panda log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "author",
                    "summary": "The public key of a p2panda author",
                    "description": "Authors are hex encoded Ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    }
                },
                {
                    "name": "document",
                    "summary": "The hash identifying a document",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example `Entry` arguments request.",
                    "summary": "An example of a valid parameters and response when making a request, based on test data.",
                    "params": [
                        {
                            "name": "author",
                            "summary": "The `Author` of the test log.",
                            "value": "41ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa96013"
                        },
                        {
                            "name": "document",
                            "summary": "The `DocumentId` which this log is assigned",
                            "value": "0020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675c"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00209a8beac3b5d92045ddfe75df1e9b928267f4ac8829a4ac30af48d8a1c0c28c80",
                            "entryHashSkiplink": null,
                            "seqNum": "5",
                            "logId": "1"
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_queryEntries",
            "summary": "Query node for encoded entries of a given schema.",
            "description": "This method returns all entries of a given schema. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "schema",
                    "summary": "The document view id of a p2panda schema",
                    "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "oneOf": [
                            {
                                "const": "schema_definition_v1"
                            },
                            {
                                "const": "schema_field_definition_v1"
                            },
                            {
                                "type": "string",
                                "pattern": "[A-Za-z]{1}[A-Za-z0-9_]{0,63}_([0-9A-Za-z]{68})(_[0-9A-Za-z]{68})*"
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "string"
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example request for the next `Entry` arguments",
                    "summary": "The parameters and response when making this request according to the test data.",
                    "params": [
                        {
                            "name": "schema",
                            "summary": "The used `Schema` for the application data",
                            "value": "chat_0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
                        }
                    ],
                    "result": {
                        "name": "entries",
                        "summary": "All `Entries` in the test Log",
                        "value": {
                            "entries": [
                                {
                                    "author": "41ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa96013",
                                    "entryBytes": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa9601301019600206005728510e5f9ddd44a2660eb684918b8d53db89d95ae8c43f8c0363184e44ce5f2a1f6e24053dffea276dccb102ef3b080fe25531df873308b3bc1dc12833f9710f1af0fcf5a4260ccf506aaafcf721a7326ca024a36d81a0b7f2e4f94fc06",
                                    "entryHash": "0020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675c",
                                    "payloadBytes": "a466616374696f6e6663726561746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a163737472764f68682c206d79206669727374206d65737361676521",
                                    "payloadHash": "00206005728510e5f9ddd44a2660eb684918b8d53db89d95ae8c43f8c0363184e44c",
                                    "logId": "1",
                                    "seqNum": "1"
                                },
                                {
                                    "author": "41ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa96013",
                                    "entryBytes": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa9601301020020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675cee0020a52c330a91370cc53dc12da97f007118a050468aacdd80b44689b09506a18ad074c8f5416af727c2347debd19a5c0b7a4efc596973f85bb260c04c7d250dea5e50bce83939caab9cf6a0f65156572d472594726ee56a51d493b2975be8d4ab05",
                                    "entryHash": "002075ceac421b483ad5dc688c57e20249f8d12fcc58e3054762bfbfd631e24a74e3",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323036343634393463333037396463353361646163656638373230326435333163396465316434343763623261336562636437383766373434646465653636373563666669656c6473a1676d657373616765a1637374727357686963682049206e6f77207570646174652e",
                                    "payloadHash": "0020a52c330a91370cc53dc12da97f007118a050468aacdd80b44689b09506a18ad0",
                                    "logId": "1",
                                    "seqNum": "2"
                                },
                                {
                                    "author": "41ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa96013",
                                    "entryBytes": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa960130103002075ceac421b483ad5dc688c57e20249f8d12fcc58e3054762bfbfd631e24a74e3f10020bd81d62fe2ee96a1d1b87b819f3e2346c5f9a34b025c68bb7fa4a7de31cf045d9b358b931f5b19e3c2d2d8784888ea51cfcb6522f336c8f4c6ad99c9c96382820d13dd2820e40d2d01344c473d3009acece1847ebc2799bbeaced9fb15e8e202",
                                    "entryHash": "002072fac8b939ce16cf71c5a9ae55c71776ef133de498c230462bdcf2320acdcf10",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323037356365616334323162343833616435646336383863353765323032343966386431326663633538653330353437363262666266643633316532346137346533666669656c6473a1676d657373616765a16373747276416e64207468656e2075706461746520616761696e2e",
                                    "payloadHash": "0020bd81d62fe2ee96a1d1b87b819f3e2346c5f9a34b025c68bb7fa4a7de31cf045d",
                                    "logId": "1",
                                    "seqNum": "3"
                                },
                                {
                                    "author": "41ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa96013",
                                    "entryBytes": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa9601301040020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675c002072fac8b939ce16cf71c5a9ae55c71776ef133de498c230462bdcf2320acdcf10c5002050ec4cea5fd81cddfd8c488381ff3b4565f316202c0d4634a6cf26ff10aeee42254a514fb7c5381f8cc2b6b04c00b0756e3cec6ef12409c53c199efd6a01d8a0fd4d3c1bcc29b9f368fd8e8988ffd1abee9d9c1393586a3d871e25477a421d01",
                                    "entryHash": "00209a8beac3b5d92045ddfe75df1e9b928267f4ac8829a4ac30af48d8a1c0c28c80",
                                    "payloadBytes": "a466616374696f6e6664656c65746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323037326661633862393339636531366366373163356139616535356337313737366566313333646534393863323330343632626463663233323061636463663130",
                                    "payloadHash": "002050ec4cea5fd81cddfd8c488381ff3b4565f316202c0d4634a6cf26ff10aeee42",
                                    "logId": "1",
                                    "seqNum": "4"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_publishEntry",
            "summary": "Publish an encoded entry and operation.",
            "description": "Publish a new `Entry` to a `p2panda` log. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "entryEncoded",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "operationEncoded",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                            "value": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa9601301019600206005728510e5f9ddd44a2660eb684918b8d53db89d95ae8c43f8c0363184e44ce5f2a1f6e24053dffea276dccb102ef3b080fe25531df873308b3bc1dc12833f9710f1af0fcf5a4260ccf506aaafcf721a7326ca024a36d81a0b7f2e4f94fc06"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6663726561746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a163737472764f68682c206d79206669727374206d65737361676521"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the second `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675c",
                            "entryHashSkiplink": null,
                            "seqNum": "2",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                            "value": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa9601301020020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675cee0020a52c330a91370cc53dc12da97f007118a050468aacdd80b44689b09506a18ad074c8f5416af727c2347debd19a5c0b7a4efc596973f85bb260c04c7d250dea5e50bce83939caab9cf6a0f65156572d472594726ee56a51d493b2975be8d4ab05"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323036343634393463333037396463353361646163656638373230326435333163396465316434343763623261336562636437383766373434646465653636373563666669656c6473a1676d657373616765a1637374727357686963682049206e6f77207570646174652e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the third `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "002075ceac421b483ad5dc688c57e20249f8d12fcc58e3054762bfbfd631e24a74e3",
                            "entryHashSkiplink": null,
                            "seqNum": "3",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                            "value": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa960130103002075ceac421b483ad5dc688c57e20249f8d12fcc58e3054762bfbfd631e24a74e3f10020bd81d62fe2ee96a1d1b87b819f3e2346c5f9a34b025c68bb7fa4a7de31cf045d9b358b931f5b19e3c2d2d8784888ea51cfcb6522f336c8f4c6ad99c9c96382820d13dd2820e40d2d01344c473d3009acece1847ebc2799bbeaced9fb15e8e202"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323037356365616334323162343833616435646336383863353765323032343966386431326663633538653330353437363262666266643633316532346137346533666669656c6473a1676d657373616765a16373747276416e64207468656e2075706461746520616761696e2e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "002072fac8b939ce16cf71c5a9ae55c71776ef133de498c230462bdcf2320acdcf10",
                            "entryHashSkiplink": "0020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675c",
                            "seqNum": "4",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                            "value": "0041ec3a3f1e1acdf9e2c271e75aa2a768779f6e2222d38ebda4bc26c31fa9601301040020646494c3079dc53adacef87202d531c9de1d447cb2a3ebcd787f744ddee6675c002072fac8b939ce16cf71c5a9ae55c71776ef133de498c230462bdcf2320acdcf10c5002050ec4cea5fd81cddfd8c488381ff3b4565f316202c0d4634a6cf26ff10aeee42254a514fb7c5381f8cc2b6b04c00b0756e3cec6ef12409c53c199efd6a01d8a0fd4d3c1bcc29b9f368fd8e8988ffd1abee9d9c1393586a3d871e25477a421d01"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6664656c65746566736368656d617849636861745f30303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323037326661633862393339636531366366373163356139616535356337313737366566313333646534393863323330343632626463663233323061636463663130"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00209a8beac3b5d92045ddfe75df1e9b928267f4ac8829a4ac30af48d8a1c0c28c80",
                            "entryHashSkiplink": null,
                            "seqNum": "5",
                            "logId": "1"
                        }
                    }
                }
            ]
        }
    ]
}