{
    "openrpc": "1.0.0-rc1",
    "info": {
        "title": "p2panda RPC interface",
        "version": "0.0.1",
        "description": "The API for a p2panda node which can be used for creating and retrieving entries on a Bamboo append-only log.",
        "contact": {
            "name": "p2panda Team",
            "email": "contributors@p2panda.org",
            "url": "https://p2panda.org"
        },
        "license": {
            "name": "GNU Affero General Public License v3.0"
        }
    },
    "servers": [
        {
            "name": "p2panda node",
            "url": "https://welle.liebechaos.org"
        }
    ],
    "components": {
        "contentDescriptors": {
            "EntryArgs": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 132,
                                    "maxLength": 132,
                                    "pattern": "[0-9a-f]{132}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 132,
                                    "maxLength": 132,
                                    "pattern": "[0-9a-f]{132}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "Author": {
                "name": "author",
                "summary": "The public key of a p2panda author",
                "description": "Authors are hex encoded ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "pattern": "[0-9a-f]{64}",
                    "minLength": 64,
                    "maxLength": 64
                }
            },
            "Schema": {
                "name": "schema",
                "summary": "The hash of a p2panda schema",
                "description": "Validation for message payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda messages. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "minLength": 132,
                    "maxLength": 132,
                    "pattern": "[0-9a-f]{132}"
                }
            },
            "QueryEntriesResponse": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 132,
                                "maxLength": 132,
                                "pattern": "[0-9a-f]{132}"
                            },
                            "logId": {
                                "type": "number",
                                "minimum": 1
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 132,
                                "maxLength": 132,
                                "pattern": "[0-9a-f]{132}"
                            },
                            "seqNum": {
                                "type": "number",
                                "minimum": 1
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "Author": {
                "type": "string",
                "pattern": "[0-9a-f]{64}",
                "minLength": 64,
                "maxLength": 64
            },
            "Hash": {
                "type": "string",
                "minLength": 132,
                "maxLength": 132,
                "pattern": "[0-9a-f]{132}"
            },
            "EntryArgs": {
                "type": "object",
                "properties": {
                    "entryHashSkiplink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 132,
                                "maxLength": 132,
                                "pattern": "[0-9a-f]{132}"
                            }
                        ]
                    },
                    "entryHashBacklink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 132,
                                "maxLength": 132,
                                "pattern": "[0-9a-f]{132}"
                            }
                        ]
                    },
                    "seqNum": {
                        "type": "number",
                        "minimum": 1
                    },
                    "logId": {
                        "type": "number",
                        "minimum": 1
                    }
                }
            },
            "Entry": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    },
                    "entryBytes": {
                        "type": "string"
                    },
                    "entryHash": {
                        "type": "string",
                        "minLength": 132,
                        "maxLength": 132,
                        "pattern": "[0-9a-f]{132}"
                    },
                    "logId": {
                        "type": "number",
                        "minimum": 1
                    },
                    "payloadBytes": {
                        "type": "string"
                    },
                    "payloadHash": {
                        "type": "string",
                        "minLength": 132,
                        "maxLength": 132,
                        "pattern": "[0-9a-f]{132}"
                    },
                    "seqNum": {
                        "type": "number",
                        "minimum": 1
                    }
                }
            },
            "EntryEncoded": {
                "type": "string"
            },
            "MessageEncoded": {
                "type": "string"
            },
            "Entries": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "author": {
                            "type": "string",
                            "pattern": "[0-9a-f]{64}",
                            "minLength": 64,
                            "maxLength": 64
                        },
                        "entryBytes": {
                            "type": "string"
                        },
                        "entryHash": {
                            "type": "string",
                            "minLength": 132,
                            "maxLength": 132,
                            "pattern": "[0-9a-f]{132}"
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        },
                        "payloadBytes": {
                            "type": "string"
                        },
                        "payloadHash": {
                            "type": "string",
                            "minLength": 132,
                            "maxLength": 132,
                            "pattern": "[0-9a-f]{132}"
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            }
        },
        "examples": {
            "Entry1": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                "value": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc960101dc00402d22e064b16c17209a0a60e6326904effa2a34ad442fe9c8d86664a70b313a464b4dca3aa0927a299968e82d79f29e100191b3f32d8eda63b340fb9757b670609ade5b150be29f2334afe86b277153dd587c5fcea2dd82812df0d9fb5db234efe51883e0234242beae89d439a05947e1530d2282dad74e91d2e5915a08929c0c"
            },
            "Entry2": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                "value": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc9601020040f80486aa52d765acaa2d1e349a1ab62d6f3ae254af263da4e94ab746a8a9aa08ec7c81f18fe563faaae05927bc13815aec4c08b23836f2c0504d9bb356f8f4c6f901620040e48a88d23c57c3ad841f1549317333d7f9ffff763c2ebec448046481a68b9aac126bfa0882653027fc860a1dade523c8d869600354951a1b2e0b805253418dae746ded3f5009e76f4bde709e57b44936b5a63113748a0f5d1c3fcb7af95c65cf78423eca655231ad9c7f9f64e6c7eb5c7392b1ebc5e31b6a03a23d626670290e"
            },
            "Entry3": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                "value": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc9601030040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1af9012e0040ba80c489d9b50f22c75be0b7871efe19d22101437e81d58c0c1705053fada57d0e328f3f060bb0de17e3beeb4e2c45bcc75f25a57d418b65b9a668ba7afea4738f18cf3b520d661098386d1fec89a553c728523340d0cad26e99e8cf2e69a30b8f2ea7fbc23d095b0072e8db71096df8ad523cc9256cb9024e836dee7406ff04"
            },
            "Entry4": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                "value": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc9601040040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1a0040bbb103cc4ecd0e0c04c112de6fe6c070893a31554fcb1d910d6d0cf038b98a8e65a7230aebe1c465c934c8e445ad16f8042251fa8391f6491ead637664c429a6db0040c2d0171b8b15fbee2a897c4e1a66bd82f518d6e92645d51aec14570e146ab7a4ef3bc83a30dc198210c59df476ace35e037ffce314a8e8badb38c1d5e68b0fb0ce6a3864b5e80ce83ef9da3f8f5f31fb681c671346a891b82971600c9083227f6a90544924dd5fa2482e24aa271f3a1245a4d063c1317b57fc5ab7de34ecbe07"
            },
            "Message1": {
                "name": "messageEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6663726561746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
            },
            "Message2": {
                "name": "messageEncoded",
                "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e016269647884303034306638303438366161353264373635616361613264316533343961316162363264366633616532353461663236336461346539346162373436613861396161303865633763383166313866653536336661616165303539323762633133383135616563346330386232333833366632633035303464396262333536663866346336666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
            },
            "Message3": {
                "name": "messageEncoded",
                "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6664656c65746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e016269647884303034306638303438366161353264373635616361613264316533343961316162363264366633616532353461663236336461346539346162373436613861396161303865633763383166313866653536336661616165303539323762633133383135616563346330386232333833366632633035303464396262333536663866346336"
            },
            "Message4": {
                "name": "messageEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6663726561746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565754c6574277320747279207468617420616761696e2e"
            },
            "EntryArgs1": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the first `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": null,
                    "entryHashSkiplink": null,
                    "seqNum": 1,
                    "logId": 1
                }
            },
            "EntryArgs2": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the second `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0040f80486aa52d765acaa2d1e349a1ab62d6f3ae254af263da4e94ab746a8a9aa08ec7c81f18fe563faaae05927bc13815aec4c08b23836f2c0504d9bb356f8f4c6",
                    "entryHashSkiplink": null,
                    "seqNum": 2,
                    "logId": 1
                }
            },
            "EntryArgs3": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the third `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1a",
                    "entryHashSkiplink": null,
                    "seqNum": 3,
                    "logId": 1
                }
            },
            "EntryArgs4": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0040bbb103cc4ecd0e0c04c112de6fe6c070893a31554fcb1d910d6d0cf038b98a8e65a7230aebe1c465c934c8e445ad16f8042251fa8391f6491ead637664c429a6",
                    "entryHashSkiplink": "0040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1a",
                    "seqNum": 4,
                    "logId": 1
                }
            },
            "EntryArgs5": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0040fd224effd3aa26c2551a380ef9c48a6fae89f388949f24de314027d8ce3e2a5749077afa64a445299ca9528970092a33ef29aa30e5783d958fcee81bed0a197c",
                    "entryHashSkiplink": null,
                    "seqNum": 5,
                    "logId": 1
                }
            },
            "Author": {
                "name": "author",
                "summary": "The `Author` of the test log.",
                "value": "2f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc96"
            },
            "Schema": {
                "name": "schema",
                "summary": "The `Schema` which this log is assigned",
                "value": "00401d76566758a5b6bfc561f1c936d8fc86b5b42ea22ab1dabf40d249d27dd906401fde147e53f44c103dd02a254916be113e51de1077a946a3a0c1272b9b348437"
            },
            "Entries": {
                "name": "entries",
                "summary": "All `Entries` in the test Log",
                "value": {
                    "entries": [
                        {
                            "author": "2f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc96",
                            "entryBytes": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc960101dc00402d22e064b16c17209a0a60e6326904effa2a34ad442fe9c8d86664a70b313a464b4dca3aa0927a299968e82d79f29e100191b3f32d8eda63b340fb9757b670609ade5b150be29f2334afe86b277153dd587c5fcea2dd82812df0d9fb5db234efe51883e0234242beae89d439a05947e1530d2282dad74e91d2e5915a08929c0c",
                            "entryHash": "0040f80486aa52d765acaa2d1e349a1ab62d6f3ae254af263da4e94ab746a8a9aa08ec7c81f18fe563faaae05927bc13815aec4c08b23836f2c0504d9bb356f8f4c6",
                            "payloadBytes": "a466616374696f6e6663726561746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                            "payloadHash": "00402d22e064b16c17209a0a60e6326904effa2a34ad442fe9c8d86664a70b313a464b4dca3aa0927a299968e82d79f29e100191b3f32d8eda63b340fb9757b67060",
                            "logId": 1,
                            "seqNum": 1
                        },
                        {
                            "author": "2f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc96",
                            "entryBytes": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc9601020040f80486aa52d765acaa2d1e349a1ab62d6f3ae254af263da4e94ab746a8a9aa08ec7c81f18fe563faaae05927bc13815aec4c08b23836f2c0504d9bb356f8f4c6f901620040e48a88d23c57c3ad841f1549317333d7f9ffff763c2ebec448046481a68b9aac126bfa0882653027fc860a1dade523c8d869600354951a1b2e0b805253418dae746ded3f5009e76f4bde709e57b44936b5a63113748a0f5d1c3fcb7af95c65cf78423eca655231ad9c7f9f64e6c7eb5c7392b1ebc5e31b6a03a23d626670290e",
                            "entryHash": "0040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1a",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e016269647884303034306638303438366161353264373635616361613264316533343961316162363264366633616532353461663236336461346539346162373436613861396161303865633763383166313866653536336661616165303539323762633133383135616563346330386232333833366632633035303464396262333536663866346336666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                            "payloadHash": "0040e48a88d23c57c3ad841f1549317333d7f9ffff763c2ebec448046481a68b9aac126bfa0882653027fc860a1dade523c8d869600354951a1b2e0b805253418dae",
                            "logId": 1,
                            "seqNum": 2
                        },
                        {
                            "author": "2f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc96",
                            "entryBytes": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc9601030040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1af9012e0040ba80c489d9b50f22c75be0b7871efe19d22101437e81d58c0c1705053fada57d0e328f3f060bb0de17e3beeb4e2c45bcc75f25a57d418b65b9a668ba7afea4738f18cf3b520d661098386d1fec89a553c728523340d0cad26e99e8cf2e69a30b8f2ea7fbc23d095b0072e8db71096df8ad523cc9256cb9024e836dee7406ff04",
                            "entryHash": "0040bbb103cc4ecd0e0c04c112de6fe6c070893a31554fcb1d910d6d0cf038b98a8e65a7230aebe1c465c934c8e445ad16f8042251fa8391f6491ead637664c429a6",
                            "payloadBytes": "a466616374696f6e6664656c65746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e016269647884303034306638303438366161353264373635616361613264316533343961316162363264366633616532353461663236336461346539346162373436613861396161303865633763383166313866653536336661616165303539323762633133383135616563346330386232333833366632633035303464396262333536663866346336",
                            "payloadHash": "0040ba80c489d9b50f22c75be0b7871efe19d22101437e81d58c0c1705053fada57d0e328f3f060bb0de17e3beeb4e2c45bcc75f25a57d418b65b9a668ba7afea473",
                            "logId": 1,
                            "seqNum": 3
                        },
                        {
                            "author": "2f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc96",
                            "entryBytes": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc9601040040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1a0040bbb103cc4ecd0e0c04c112de6fe6c070893a31554fcb1d910d6d0cf038b98a8e65a7230aebe1c465c934c8e445ad16f8042251fa8391f6491ead637664c429a6db0040c2d0171b8b15fbee2a897c4e1a66bd82f518d6e92645d51aec14570e146ab7a4ef3bc83a30dc198210c59df476ace35e037ffce314a8e8badb38c1d5e68b0fb0ce6a3864b5e80ce83ef9da3f8f5f31fb681c671346a891b82971600c9083227f6a90544924dd5fa2482e24aa271f3a1245a4d063c1317b57fc5ab7de34ecbe07",
                            "entryHash": "0040fd224effd3aa26c2551a380ef9c48a6fae89f388949f24de314027d8ce3e2a5749077afa64a445299ca9528970092a33ef29aa30e5783d958fcee81bed0a197c",
                            "payloadBytes": "a466616374696f6e6663726561746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565754c6574277320747279207468617420616761696e2e",
                            "payloadHash": "0040c2d0171b8b15fbee2a897c4e1a66bd82f518d6e92645d51aec14570e146ab7a4ef3bc83a30dc198210c59df476ace35e037ffce314a8e8badb38c1d5e68b0fb0",
                            "logId": 1,
                            "seqNum": 4
                        }
                    ]
                }
            }
        }
    },
    "methods": [
        {
            "name": "panda_getEntryArguments",
            "summary": "Returns arguments needed for constructing the next entry given author and schema.",
            "description": "Fetch the required arguments needed when constructing and publishing an `Entry` to a p2panda log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "author",
                    "summary": "The public key of a p2panda author",
                    "description": "Authors are hex encoded ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    }
                },
                {
                    "name": "schema",
                    "summary": "The hash of a p2panda schema",
                    "description": "Validation for message payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda messages. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "minLength": 132,
                        "maxLength": 132,
                        "pattern": "[0-9a-f]{132}"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 132,
                                    "maxLength": 132,
                                    "pattern": "[0-9a-f]{132}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 132,
                                    "maxLength": 132,
                                    "pattern": "[0-9a-f]{132}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example `Entry` arguments request.",
                    "summary": "An example of a valid parameters and response when making a request, based on test data.",
                    "params": [
                        {
                            "name": "author",
                            "summary": "The `Author` of the test log.",
                            "value": "2f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc96"
                        },
                        {
                            "name": "schema",
                            "summary": "The `Schema` which this log is assigned",
                            "value": "00401d76566758a5b6bfc561f1c936d8fc86b5b42ea22ab1dabf40d249d27dd906401fde147e53f44c103dd02a254916be113e51de1077a946a3a0c1272b9b348437"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0040fd224effd3aa26c2551a380ef9c48a6fae89f388949f24de314027d8ce3e2a5749077afa64a445299ca9528970092a33ef29aa30e5783d958fcee81bed0a197c",
                            "entryHashSkiplink": null,
                            "seqNum": 5,
                            "logId": 1
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_queryEntries",
            "summary": "Query node for encoded entries of a given schema.",
            "description": "This method returns all entries of a given schema. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "schema",
                    "summary": "The hash of a p2panda schema",
                    "description": "Validation for message payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda messages. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "minLength": 132,
                        "maxLength": 132,
                        "pattern": "[0-9a-f]{132}"
                    }
                }
            ],
            "result": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 132,
                                "maxLength": 132,
                                "pattern": "[0-9a-f]{132}"
                            },
                            "logId": {
                                "type": "number",
                                "minimum": 1
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 132,
                                "maxLength": 132,
                                "pattern": "[0-9a-f]{132}"
                            },
                            "seqNum": {
                                "type": "number",
                                "minimum": 1
                            }
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example request for the next `Entry` arguments",
                    "summary": "The parameters and response when making this request according to the test data.",
                    "params": [
                        {
                            "name": "schema",
                            "summary": "The `Schema` which this log is assigned",
                            "value": "00401d76566758a5b6bfc561f1c936d8fc86b5b42ea22ab1dabf40d249d27dd906401fde147e53f44c103dd02a254916be113e51de1077a946a3a0c1272b9b348437"
                        }
                    ],
                    "result": {
                        "name": "entries",
                        "summary": "All `Entries` in the test Log",
                        "value": {
                            "entries": [
                                {
                                    "author": "2f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc96",
                                    "entryBytes": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc960101dc00402d22e064b16c17209a0a60e6326904effa2a34ad442fe9c8d86664a70b313a464b4dca3aa0927a299968e82d79f29e100191b3f32d8eda63b340fb9757b670609ade5b150be29f2334afe86b277153dd587c5fcea2dd82812df0d9fb5db234efe51883e0234242beae89d439a05947e1530d2282dad74e91d2e5915a08929c0c",
                                    "entryHash": "0040f80486aa52d765acaa2d1e349a1ab62d6f3ae254af263da4e94ab746a8a9aa08ec7c81f18fe563faaae05927bc13815aec4c08b23836f2c0504d9bb356f8f4c6",
                                    "payloadBytes": "a466616374696f6e6663726561746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                                    "payloadHash": "00402d22e064b16c17209a0a60e6326904effa2a34ad442fe9c8d86664a70b313a464b4dca3aa0927a299968e82d79f29e100191b3f32d8eda63b340fb9757b67060",
                                    "logId": 1,
                                    "seqNum": 1
                                },
                                {
                                    "author": "2f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc96",
                                    "entryBytes": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc9601020040f80486aa52d765acaa2d1e349a1ab62d6f3ae254af263da4e94ab746a8a9aa08ec7c81f18fe563faaae05927bc13815aec4c08b23836f2c0504d9bb356f8f4c6f901620040e48a88d23c57c3ad841f1549317333d7f9ffff763c2ebec448046481a68b9aac126bfa0882653027fc860a1dade523c8d869600354951a1b2e0b805253418dae746ded3f5009e76f4bde709e57b44936b5a63113748a0f5d1c3fcb7af95c65cf78423eca655231ad9c7f9f64e6c7eb5c7392b1ebc5e31b6a03a23d626670290e",
                                    "entryHash": "0040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1a",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e016269647884303034306638303438366161353264373635616361613264316533343961316162363264366633616532353461663236336461346539346162373436613861396161303865633763383166313866653536336661616165303539323762633133383135616563346330386232333833366632633035303464396262333536663866346336666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                                    "payloadHash": "0040e48a88d23c57c3ad841f1549317333d7f9ffff763c2ebec448046481a68b9aac126bfa0882653027fc860a1dade523c8d869600354951a1b2e0b805253418dae",
                                    "logId": 1,
                                    "seqNum": 2
                                },
                                {
                                    "author": "2f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc96",
                                    "entryBytes": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc9601030040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1af9012e0040ba80c489d9b50f22c75be0b7871efe19d22101437e81d58c0c1705053fada57d0e328f3f060bb0de17e3beeb4e2c45bcc75f25a57d418b65b9a668ba7afea4738f18cf3b520d661098386d1fec89a553c728523340d0cad26e99e8cf2e69a30b8f2ea7fbc23d095b0072e8db71096df8ad523cc9256cb9024e836dee7406ff04",
                                    "entryHash": "0040bbb103cc4ecd0e0c04c112de6fe6c070893a31554fcb1d910d6d0cf038b98a8e65a7230aebe1c465c934c8e445ad16f8042251fa8391f6491ead637664c429a6",
                                    "payloadBytes": "a466616374696f6e6664656c65746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e016269647884303034306638303438366161353264373635616361613264316533343961316162363264366633616532353461663236336461346539346162373436613861396161303865633763383166313866653536336661616165303539323762633133383135616563346330386232333833366632633035303464396262333536663866346336",
                                    "payloadHash": "0040ba80c489d9b50f22c75be0b7871efe19d22101437e81d58c0c1705053fada57d0e328f3f060bb0de17e3beeb4e2c45bcc75f25a57d418b65b9a668ba7afea473",
                                    "logId": 1,
                                    "seqNum": 3
                                },
                                {
                                    "author": "2f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc96",
                                    "entryBytes": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc9601040040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1a0040bbb103cc4ecd0e0c04c112de6fe6c070893a31554fcb1d910d6d0cf038b98a8e65a7230aebe1c465c934c8e445ad16f8042251fa8391f6491ead637664c429a6db0040c2d0171b8b15fbee2a897c4e1a66bd82f518d6e92645d51aec14570e146ab7a4ef3bc83a30dc198210c59df476ace35e037ffce314a8e8badb38c1d5e68b0fb0ce6a3864b5e80ce83ef9da3f8f5f31fb681c671346a891b82971600c9083227f6a90544924dd5fa2482e24aa271f3a1245a4d063c1317b57fc5ab7de34ecbe07",
                                    "entryHash": "0040fd224effd3aa26c2551a380ef9c48a6fae89f388949f24de314027d8ce3e2a5749077afa64a445299ca9528970092a33ef29aa30e5783d958fcee81bed0a197c",
                                    "payloadBytes": "a466616374696f6e6663726561746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565754c6574277320747279207468617420616761696e2e",
                                    "payloadHash": "0040c2d0171b8b15fbee2a897c4e1a66bd82f518d6e92645d51aec14570e146ab7a4ef3bc83a30dc198210c59df476ace35e037ffce314a8e8badb38c1d5e68b0fb0",
                                    "logId": 1,
                                    "seqNum": 4
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_publishEntry",
            "summary": "Publish an encoded entry and message.",
            "description": "Publish a new `Entry` to a `p2panda` log. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "entryEncoded",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "messageEncoded",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 132,
                                    "maxLength": 132,
                                    "pattern": "[0-9a-f]{132}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 132,
                                    "maxLength": 132,
                                    "pattern": "[0-9a-f]{132}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                            "value": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc960101dc00402d22e064b16c17209a0a60e6326904effa2a34ad442fe9c8d86664a70b313a464b4dca3aa0927a299968e82d79f29e100191b3f32d8eda63b340fb9757b670609ade5b150be29f2334afe86b277153dd587c5fcea2dd82812df0d9fb5db234efe51883e0234242beae89d439a05947e1530d2282dad74e91d2e5915a08929c0c"
                        },
                        {
                            "name": "messageEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6663726561746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the second `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0040f80486aa52d765acaa2d1e349a1ab62d6f3ae254af263da4e94ab746a8a9aa08ec7c81f18fe563faaae05927bc13815aec4c08b23836f2c0504d9bb356f8f4c6",
                            "entryHashSkiplink": null,
                            "seqNum": 2,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                            "value": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc9601020040f80486aa52d765acaa2d1e349a1ab62d6f3ae254af263da4e94ab746a8a9aa08ec7c81f18fe563faaae05927bc13815aec4c08b23836f2c0504d9bb356f8f4c6f901620040e48a88d23c57c3ad841f1549317333d7f9ffff763c2ebec448046481a68b9aac126bfa0882653027fc860a1dade523c8d869600354951a1b2e0b805253418dae746ded3f5009e76f4bde709e57b44936b5a63113748a0f5d1c3fcb7af95c65cf78423eca655231ad9c7f9f64e6c7eb5c7392b1ebc5e31b6a03a23d626670290e"
                        },
                        {
                            "name": "messageEncoded",
                            "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e016269647884303034306638303438366161353264373635616361613264316533343961316162363264366633616532353461663236336461346539346162373436613861396161303865633763383166313866653536336661616165303539323762633133383135616563346330386232333833366632633035303464396262333536663866346336666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the third `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1a",
                            "entryHashSkiplink": null,
                            "seqNum": 3,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                            "value": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc9601030040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1af9012e0040ba80c489d9b50f22c75be0b7871efe19d22101437e81d58c0c1705053fada57d0e328f3f060bb0de17e3beeb4e2c45bcc75f25a57d418b65b9a668ba7afea4738f18cf3b520d661098386d1fec89a553c728523340d0cad26e99e8cf2e69a30b8f2ea7fbc23d095b0072e8db71096df8ad523cc9256cb9024e836dee7406ff04"
                        },
                        {
                            "name": "messageEncoded",
                            "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6664656c65746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e016269647884303034306638303438366161353264373635616361613264316533343961316162363264366633616532353461663236336461346539346162373436613861396161303865633763383166313866653536336661616165303539323762633133383135616563346330386232333833366632633035303464396262333536663866346336"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0040bbb103cc4ecd0e0c04c112de6fe6c070893a31554fcb1d910d6d0cf038b98a8e65a7230aebe1c465c934c8e445ad16f8042251fa8391f6491ead637664c429a6",
                            "entryHashSkiplink": "0040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1a",
                            "seqNum": 4,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                            "value": "002f8e50c2ede6d936ecc3144187ff1c273808185cfbc5ff3d3748d1ff7353fc9601040040b893ff157b6c402b677b6fe071475e17ca1a0f45852eaed9e9c283b53455a86d1ca9ebafde3809d4197f4732e09f57c969c845707fb51147df8ea736da177c1a0040bbb103cc4ecd0e0c04c112de6fe6c070893a31554fcb1d910d6d0cf038b98a8e65a7230aebe1c465c934c8e445ad16f8042251fa8391f6491ead637664c429a6db0040c2d0171b8b15fbee2a897c4e1a66bd82f518d6e92645d51aec14570e146ab7a4ef3bc83a30dc198210c59df476ace35e037ffce314a8e8badb38c1d5e68b0fb0ce6a3864b5e80ce83ef9da3f8f5f31fb681c671346a891b82971600c9083227f6a90544924dd5fa2482e24aa271f3a1245a4d063c1317b57fc5ab7de34ecbe07"
                        },
                        {
                            "name": "messageEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6663726561746566736368656d6178843030343031643736353636373538613562366266633536316631633933366438666338366235623432656132326162316461626634306432343964323764643930363430316664653134376535336634346331303364643032613235343931366265313133653531646531303737613934366133613063313237326239623334383433376776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565754c6574277320747279207468617420616761696e2e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0040fd224effd3aa26c2551a380ef9c48a6fae89f388949f24de314027d8ce3e2a5749077afa64a445299ca9528970092a33ef29aa30e5783d958fcee81bed0a197c",
                            "entryHashSkiplink": null,
                            "seqNum": 5,
                            "logId": 1
                        }
                    }
                }
            ]
        }
    ]
}