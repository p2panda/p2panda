{
    "openrpc": "1.0.0-rc1",
    "info": {
        "title": "p2panda RPC interface",
        "version": "0.0.1",
        "description": "The API for a p2panda node which can be used for creating and retrieving entries on a Bamboo append-only log.",
        "contact": {
            "name": "p2panda Team",
            "email": "contributors@p2panda.org",
            "url": "https://p2panda.org"
        },
        "license": {
            "name": "GNU Affero General Public License v3.0"
        }
    },
    "servers": [
        {
            "name": "p2panda node",
            "url": "https://welle.liebechaos.org"
        }
    ],
    "components": {
        "contentDescriptors": {
            "EntryArgs": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `skiplink`, `backlink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "skiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "backlink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "Author": {
                "name": "author",
                "summary": "The public key of a p2panda author",
                "description": "Authors are hex encoded ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "pattern": "[0-9a-f]{64}",
                    "minLength": 64,
                    "maxLength": 64
                }
            },
            "Schema": {
                "name": "schema",
                "summary": "The hash of a p2panda schema",
                "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2pandan operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "minLength": 68,
                    "maxLength": 68,
                    "pattern": "[0-9a-f]{68}"
                }
            },
            "DocumentId": {
                "name": "document",
                "summary": "The hash identifying a document",
                "required": false,
                "schema": {
                    "type": "string",
                    "minLength": 68,
                    "maxLength": 68,
                    "pattern": "[0-9a-f]{68}"
                }
            },
            "QueryEntriesResponse": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "number",
                                "minimum": 1
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "number",
                                "minimum": 1
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "Author": {
                "type": "string",
                "pattern": "[0-9a-f]{64}",
                "minLength": 64,
                "maxLength": 64
            },
            "Hash": {
                "type": "string",
                "minLength": 68,
                "maxLength": 68,
                "pattern": "[0-9a-f]{68}"
            },
            "EntryArgs": {
                "type": "object",
                "properties": {
                    "skiplink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "backlink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "seqNum": {
                        "type": "number",
                        "minimum": 1
                    },
                    "logId": {
                        "type": "number",
                        "minimum": 1
                    }
                }
            },
            "Entry": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    },
                    "entryBytes": {
                        "type": "string"
                    },
                    "entryHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "logId": {
                        "type": "number",
                        "minimum": 1
                    },
                    "payloadBytes": {
                        "type": "string"
                    },
                    "payloadHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "seqNum": {
                        "type": "number",
                        "minimum": 1
                    }
                }
            },
            "EntryEncoded": {
                "type": "string"
            },
            "OperationEncoded": {
                "type": "string"
            },
            "Entries": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "author": {
                            "type": "string",
                            "pattern": "[0-9a-f]{64}",
                            "minLength": 64,
                            "maxLength": 64
                        },
                        "entryBytes": {
                            "type": "string"
                        },
                        "entryHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        },
                        "payloadBytes": {
                            "type": "string"
                        },
                        "payloadHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            }
        },
        "examples": {
            "Entry1": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                "value": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced4401019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e4947f66487053f7bd8d3c9f75717faeaf194def41e722aa4e3fec3f573af7cb363b9df3db1e0193dfbfe75bacbab73688d83c8fc62b3eb7f7c12c6536527d467b0a"
            },
            "Entry2": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                "value": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced4401020020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029be20020fb135eea59afb47a4025145ea63d90345ca8e9869523b221d3652233d26b72c391835babe058e172bb8c233f45b1d92ec4eda5b1cb04bf5289ab7a9c905c82ee2b085367f4534f98f952670273e29a69de6e7c5c26e7d23435ee45868d2bbb0e"
            },
            "Entry3": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                "value": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44010300207e006789475b677ea3395895afee35482810d307fb35dbc4a5a715f8a32648c2e50020f6c9378508eca24b8e2c6d7bbe23e3aa824661bd379cc84a2a7b5e85faadcdf0be35186e486ec11b0e6a5ff598af259afea2014edf4cd3a4f724b7a0da19e54587cb7c0269f3141a0d3fbadd67899661a9c9798880a4a700ea685a19d3bbbf03"
            },
            "Entry4": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                "value": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced4401040020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029b0020583cb37fc29928f03914b02482716ef4e7939f4068adcdf7fb0bc1ed7a54fd17ae0020cdb4f8c28071fc4f9bf84e1ab02989048891098d57d64cde9d82e7e9ffb336a21320b03e74422e3db0e0149f112a934f8d6b7624f0e0dd873e41603fcb826efb0b49ea4b5c20893b0327653199a8362d2e4f851edb8ffd11748503a47e1cc106"
            },
            "Operation1": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
            },
            "Operation2": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323039383266396564333232643265633335346335353862363165613638383163643861353739306330633730633738613638613837333631633938353930323962666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
            },
            "Operation3": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323039383266396564333232643265633335346335353862363165613638383163643861353739306330633730633738613638613837333631633938353930323962666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e"
            },
            "Operation4": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323039383266396564333232643265633335346335353862363165613638383163643861353739306330633730633738613638613837333631633938353930323962"
            },
            "EntryArgs1": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the first `Entry` to the test log.",
                "value": {
                    "backlink": null,
                    "skiplink": null,
                    "seqNum": 1,
                    "logId": 1
                }
            },
            "EntryArgs2": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the second `Entry` to the test log.",
                "value": {
                    "backlink": "0020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029b",
                    "skiplink": null,
                    "seqNum": 2,
                    "logId": 1
                }
            },
            "EntryArgs3": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the third `Entry` to the test log.",
                "value": {
                    "backlink": "00207e006789475b677ea3395895afee35482810d307fb35dbc4a5a715f8a32648c2",
                    "skiplink": null,
                    "seqNum": 3,
                    "logId": 1
                }
            },
            "EntryArgs4": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                "value": {
                    "backlink": "0020583cb37fc29928f03914b02482716ef4e7939f4068adcdf7fb0bc1ed7a54fd17",
                    "skiplink": "0020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029b",
                    "seqNum": 4,
                    "logId": 1
                }
            },
            "EntryArgs5": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                "value": {
                    "backlink": "0020890f9ec23ba5c4992cf44b787a2fc538ce90ad43465511f2e49aaf00f5097d50",
                    "skiplink": null,
                    "seqNum": 5,
                    "logId": 1
                }
            },
            "Author": {
                "name": "author",
                "summary": "The `Author` of the test log.",
                "value": "81cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44"
            },
            "Schema": {
                "name": "schema",
                "summary": "The used `Schema` for the user data",
                "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
            },
            "DocumentId": {
                "name": "document",
                "summary": "The `DocumentId` which this log is assigned",
                "value": "0020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029b"
            },
            "Entries": {
                "name": "entries",
                "summary": "All `Entries` in the test Log",
                "value": {
                    "entries": [
                        {
                            "author": "81cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44",
                            "entryBytes": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced4401019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e4947f66487053f7bd8d3c9f75717faeaf194def41e722aa4e3fec3f573af7cb363b9df3db1e0193dfbfe75bacbab73688d83c8fc62b3eb7f7c12c6536527d467b0a",
                            "entryHash": "0020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029b",
                            "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                            "payloadHash": "0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494",
                            "logId": 1,
                            "seqNum": 1
                        },
                        {
                            "author": "81cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44",
                            "entryBytes": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced4401020020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029be20020fb135eea59afb47a4025145ea63d90345ca8e9869523b221d3652233d26b72c391835babe058e172bb8c233f45b1d92ec4eda5b1cb04bf5289ab7a9c905c82ee2b085367f4534f98f952670273e29a69de6e7c5c26e7d23435ee45868d2bbb0e",
                            "entryHash": "00207e006789475b677ea3395895afee35482810d307fb35dbc4a5a715f8a32648c2",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323039383266396564333232643265633335346335353862363165613638383163643861353739306330633730633738613638613837333631633938353930323962666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                            "payloadHash": "0020fb135eea59afb47a4025145ea63d90345ca8e9869523b221d3652233d26b72c3",
                            "logId": 1,
                            "seqNum": 2
                        },
                        {
                            "author": "81cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44",
                            "entryBytes": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44010300207e006789475b677ea3395895afee35482810d307fb35dbc4a5a715f8a32648c2e50020f6c9378508eca24b8e2c6d7bbe23e3aa824661bd379cc84a2a7b5e85faadcdf0be35186e486ec11b0e6a5ff598af259afea2014edf4cd3a4f724b7a0da19e54587cb7c0269f3141a0d3fbadd67899661a9c9798880a4a700ea685a19d3bbbf03",
                            "entryHash": "0020583cb37fc29928f03914b02482716ef4e7939f4068adcdf7fb0bc1ed7a54fd17",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323039383266396564333232643265633335346335353862363165613638383163643861353739306330633730633738613638613837333631633938353930323962666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e",
                            "payloadHash": "0020f6c9378508eca24b8e2c6d7bbe23e3aa824661bd379cc84a2a7b5e85faadcdf0",
                            "logId": 1,
                            "seqNum": 3
                        },
                        {
                            "author": "81cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44",
                            "entryBytes": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced4401040020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029b0020583cb37fc29928f03914b02482716ef4e7939f4068adcdf7fb0bc1ed7a54fd17ae0020cdb4f8c28071fc4f9bf84e1ab02989048891098d57d64cde9d82e7e9ffb336a21320b03e74422e3db0e0149f112a934f8d6b7624f0e0dd873e41603fcb826efb0b49ea4b5c20893b0327653199a8362d2e4f851edb8ffd11748503a47e1cc106",
                            "entryHash": "0020890f9ec23ba5c4992cf44b787a2fc538ce90ad43465511f2e49aaf00f5097d50",
                            "payloadBytes": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323039383266396564333232643265633335346335353862363165613638383163643861353739306330633730633738613638613837333631633938353930323962",
                            "payloadHash": "0020cdb4f8c28071fc4f9bf84e1ab02989048891098d57d64cde9d82e7e9ffb336a2",
                            "logId": 1,
                            "seqNum": 4
                        }
                    ]
                }
            }
        }
    },
    "methods": [
        {
            "name": "panda_getEntryArguments",
            "summary": "Returns arguments needed for constructing the next entry given author and document id.",
            "description": "Fetch the required arguments needed when constructing and publishing an `Entry` to a p2panda log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "author",
                    "summary": "The public key of a p2panda author",
                    "description": "Authors are hex encoded ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    }
                },
                {
                    "name": "document",
                    "summary": "The hash identifying a document",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `skiplink`, `backlink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "skiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "backlink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example `Entry` arguments request.",
                    "summary": "An example of a valid parameters and response when making a request, based on test data.",
                    "params": [
                        {
                            "name": "author",
                            "summary": "The `Author` of the test log.",
                            "value": "81cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44"
                        },
                        {
                            "name": "document",
                            "summary": "The `DocumentId` which this log is assigned",
                            "value": "0020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029b"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "backlink": "0020890f9ec23ba5c4992cf44b787a2fc538ce90ad43465511f2e49aaf00f5097d50",
                            "skiplink": null,
                            "seqNum": 5,
                            "logId": 1
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_queryEntries",
            "summary": "Query node for encoded entries of a given schema.",
            "description": "This method returns all entries of a given schema. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "schema",
                    "summary": "The hash of a p2panda schema",
                    "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2pandan operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "number",
                                "minimum": 1
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "number",
                                "minimum": 1
                            }
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example request for the next `Entry` arguments",
                    "summary": "The parameters and response when making this request according to the test data.",
                    "params": [
                        {
                            "name": "schema",
                            "summary": "The used `Schema` for the user data",
                            "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
                        }
                    ],
                    "result": {
                        "name": "entries",
                        "summary": "All `Entries` in the test Log",
                        "value": {
                            "entries": [
                                {
                                    "author": "81cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44",
                                    "entryBytes": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced4401019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e4947f66487053f7bd8d3c9f75717faeaf194def41e722aa4e3fec3f573af7cb363b9df3db1e0193dfbfe75bacbab73688d83c8fc62b3eb7f7c12c6536527d467b0a",
                                    "entryHash": "0020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029b",
                                    "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                                    "payloadHash": "0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494",
                                    "logId": 1,
                                    "seqNum": 1
                                },
                                {
                                    "author": "81cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44",
                                    "entryBytes": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced4401020020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029be20020fb135eea59afb47a4025145ea63d90345ca8e9869523b221d3652233d26b72c391835babe058e172bb8c233f45b1d92ec4eda5b1cb04bf5289ab7a9c905c82ee2b085367f4534f98f952670273e29a69de6e7c5c26e7d23435ee45868d2bbb0e",
                                    "entryHash": "00207e006789475b677ea3395895afee35482810d307fb35dbc4a5a715f8a32648c2",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323039383266396564333232643265633335346335353862363165613638383163643861353739306330633730633738613638613837333631633938353930323962666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                                    "payloadHash": "0020fb135eea59afb47a4025145ea63d90345ca8e9869523b221d3652233d26b72c3",
                                    "logId": 1,
                                    "seqNum": 2
                                },
                                {
                                    "author": "81cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44",
                                    "entryBytes": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44010300207e006789475b677ea3395895afee35482810d307fb35dbc4a5a715f8a32648c2e50020f6c9378508eca24b8e2c6d7bbe23e3aa824661bd379cc84a2a7b5e85faadcdf0be35186e486ec11b0e6a5ff598af259afea2014edf4cd3a4f724b7a0da19e54587cb7c0269f3141a0d3fbadd67899661a9c9798880a4a700ea685a19d3bbbf03",
                                    "entryHash": "0020583cb37fc29928f03914b02482716ef4e7939f4068adcdf7fb0bc1ed7a54fd17",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323039383266396564333232643265633335346335353862363165613638383163643861353739306330633730633738613638613837333631633938353930323962666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e",
                                    "payloadHash": "0020f6c9378508eca24b8e2c6d7bbe23e3aa824661bd379cc84a2a7b5e85faadcdf0",
                                    "logId": 1,
                                    "seqNum": 3
                                },
                                {
                                    "author": "81cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44",
                                    "entryBytes": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced4401040020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029b0020583cb37fc29928f03914b02482716ef4e7939f4068adcdf7fb0bc1ed7a54fd17ae0020cdb4f8c28071fc4f9bf84e1ab02989048891098d57d64cde9d82e7e9ffb336a21320b03e74422e3db0e0149f112a934f8d6b7624f0e0dd873e41603fcb826efb0b49ea4b5c20893b0327653199a8362d2e4f851edb8ffd11748503a47e1cc106",
                                    "entryHash": "0020890f9ec23ba5c4992cf44b787a2fc538ce90ad43465511f2e49aaf00f5097d50",
                                    "payloadBytes": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323039383266396564333232643265633335346335353862363165613638383163643861353739306330633730633738613638613837333631633938353930323962",
                                    "payloadHash": "0020cdb4f8c28071fc4f9bf84e1ab02989048891098d57d64cde9d82e7e9ffb336a2",
                                    "logId": 1,
                                    "seqNum": 4
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_publishEntry",
            "summary": "Publish an encoded entry and operation.",
            "description": "Publish a new `Entry` to a `p2panda` log. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "entryEncoded",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "operationEncoded",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `skiplink`, `backlink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "skiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "backlink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                            "value": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced4401019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e4947f66487053f7bd8d3c9f75717faeaf194def41e722aa4e3fec3f573af7cb363b9df3db1e0193dfbfe75bacbab73688d83c8fc62b3eb7f7c12c6536527d467b0a"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the second `Entry` to the test log.",
                        "value": {
                            "backlink": "0020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029b",
                            "skiplink": null,
                            "seqNum": 2,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                            "value": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced4401020020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029be20020fb135eea59afb47a4025145ea63d90345ca8e9869523b221d3652233d26b72c391835babe058e172bb8c233f45b1d92ec4eda5b1cb04bf5289ab7a9c905c82ee2b085367f4534f98f952670273e29a69de6e7c5c26e7d23435ee45868d2bbb0e"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323039383266396564333232643265633335346335353862363165613638383163643861353739306330633730633738613638613837333631633938353930323962666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the third `Entry` to the test log.",
                        "value": {
                            "backlink": "00207e006789475b677ea3395895afee35482810d307fb35dbc4a5a715f8a32648c2",
                            "skiplink": null,
                            "seqNum": 3,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                            "value": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced44010300207e006789475b677ea3395895afee35482810d307fb35dbc4a5a715f8a32648c2e50020f6c9378508eca24b8e2c6d7bbe23e3aa824661bd379cc84a2a7b5e85faadcdf0be35186e486ec11b0e6a5ff598af259afea2014edf4cd3a4f724b7a0da19e54587cb7c0269f3141a0d3fbadd67899661a9c9798880a4a700ea685a19d3bbbf03"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323039383266396564333232643265633335346335353862363165613638383163643861353739306330633730633738613638613837333631633938353930323962666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                        "value": {
                            "backlink": "0020583cb37fc29928f03914b02482716ef4e7939f4068adcdf7fb0bc1ed7a54fd17",
                            "skiplink": "0020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029b",
                            "seqNum": 4,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                            "value": "0081cee986a155a2c3460d678a9ed2544f0bcb0364d03e349638595aee118ced4401040020982f9ed322d2ec354c558b61ea6881cd8a5790c0c70c78a68a87361c9859029b0020583cb37fc29928f03914b02482716ef4e7939f4068adcdf7fb0bc1ed7a54fd17ae0020cdb4f8c28071fc4f9bf84e1ab02989048891098d57d64cde9d82e7e9ffb336a21320b03e74422e3db0e0149f112a934f8d6b7624f0e0dd873e41603fcb826efb0b49ea4b5c20893b0327653199a8362d2e4f851edb8ffd11748503a47e1cc106"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e0162696478443030323039383266396564333232643265633335346335353862363165613638383163643861353739306330633730633738613638613837333631633938353930323962"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "backlink": "0020890f9ec23ba5c4992cf44b787a2fc538ce90ad43465511f2e49aaf00f5097d50",
                            "skiplink": null,
                            "seqNum": 5,
                            "logId": 1
                        }
                    }
                }
            ]
        }
    ]
}