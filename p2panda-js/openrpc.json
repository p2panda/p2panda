{
    "openrpc": "1.0.0-rc1",
    "info": {
        "title": "p2panda RPC interface",
        "version": "0.0.1",
        "description": "The API for a p2panda node which can be used for creating and retrieving entries on a Bamboo append-only log.",
        "contact": {
            "name": "p2panda Team",
            "email": "contributors@p2panda.org",
            "url": "https://p2panda.org"
        },
        "license": {
            "name": "GNU Affero General Public License v3.0"
        }
    },
    "servers": [
        {
            "name": "p2panda node",
            "url": "https://welle.liebechaos.org"
        }
    ],
    "components": {
        "contentDescriptors": {
            "EntryArgs": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "Author": {
                "name": "author",
                "summary": "The public key of a p2panda author",
                "description": "Authors are hex encoded ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "pattern": "[0-9a-f]{64}",
                    "minLength": 64,
                    "maxLength": 64
                }
            },
            "Schema": {
                "name": "schema",
                "summary": "The hash of a p2panda schema",
                "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2pandan operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "minLength": 68,
                    "maxLength": 68,
                    "pattern": "[0-9a-f]{68}"
                }
            },
            "QueryEntriesResponse": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "number",
                                "minimum": 1
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "number",
                                "minimum": 1
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "Author": {
                "type": "string",
                "pattern": "[0-9a-f]{64}",
                "minLength": 64,
                "maxLength": 64
            },
            "Hash": {
                "type": "string",
                "minLength": 68,
                "maxLength": 68,
                "pattern": "[0-9a-f]{68}"
            },
            "EntryArgs": {
                "type": "object",
                "properties": {
                    "entryHashSkiplink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "entryHashBacklink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "seqNum": {
                        "type": "number",
                        "minimum": 1
                    },
                    "logId": {
                        "type": "number",
                        "minimum": 1
                    }
                }
            },
            "Entry": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    },
                    "entryBytes": {
                        "type": "string"
                    },
                    "entryHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "logId": {
                        "type": "number",
                        "minimum": 1
                    },
                    "payloadBytes": {
                        "type": "string"
                    },
                    "payloadHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "seqNum": {
                        "type": "number",
                        "minimum": 1
                    }
                }
            },
            "EntryEncoded": {
                "type": "string"
            },
            "OperationEncoded": {
                "type": "string"
            },
            "Entries": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "author": {
                            "type": "string",
                            "pattern": "[0-9a-f]{64}",
                            "minLength": 64,
                            "maxLength": 64
                        },
                        "entryBytes": {
                            "type": "string"
                        },
                        "entryHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        },
                        "payloadBytes": {
                            "type": "string"
                        },
                        "payloadHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            }
        },
        "examples": {
            "Entry1": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                "value": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f701019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494cac3613d55f2749a83e91954b34091febcb1e564082a7ff40bc8c5e2058951d27c0deae0cf8e337bd31511b6f9299d525518d7a6bc95a466a277829d45009900"
            },
            "Entry2": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                "value": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7010200200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436bef9013c0020dff4ec504733e0f8ca9426206277ff4a038aee8e537f36054a3dda494ddbd5dd1de9f9cece86ea31cf6e93f67f2f8e1867c92ed50a0bacf6f234ec69ebb1b76d472f3532db61f9cc55b03dd695a7c218429e830bd7cb325479db6fbe92e2de04"
            },
            "Entry3": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                "value": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f701030020db1e973b85fb1ae9a1c9fc8603133017c4c9b28fa6301b190a51d96e1be13b31f90108002018991ed82b5f845b46102c5d2e3c3b111f509f9a58ad3cbfd440fa940ac7f2f5dbda4f1b9b91f1d80f79a41bc9ea8c87d053aead18d74d4e764344772286ff72a8065b3223cf9a2a39884e4b33a51d7fef96a2c26890c0b4315fa6976593410d"
            },
            "Entry4": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                "value": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7010400200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436be00200ae78bf6b669d2e5eb712102a6b99326f05f1e9ddc570cbcae7353ae87f883979b00205b0c87d55b707b010f29567df2e54a20618ab66aacc653b025e057d27b6e73c67d9b693f381858c8720f86f85da8766762e41da6db363916aa95952c42fe16f95dc1b5fa0651faf258f094a1ee42a9fed31fa1db96e0b4197ef638c95fcd1c0c"
            },
            "Operation1": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
            },
            "Operation2": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                "value": "a666616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e73817844303032303063663834303438623037393839343264656261376231623966636437376361373238373636343362643366656466653631326434633666623630343336626562696478443030323030636638343034386230373938393432646562613762316239666364373763613732383736363433626433666564666536313264346336666236303433366265666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
            },
            "Operation3": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e73817844303032306462316539373362383566623161653961316339666338363033313333303137633463396232386661363330316231393061353164393665316265313362333162696478443030323030636638343034386230373938393432646562613762316239666364373763613732383736363433626433666564666536313264346336666236303433366265"
            },
            "Operation4": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565754c6574277320747279207468617420616761696e2e"
            },
            "EntryArgs1": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the first `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": null,
                    "entryHashSkiplink": null,
                    "seqNum": 1,
                    "logId": 1
                }
            },
            "EntryArgs2": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the second `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "00200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436be",
                    "entryHashSkiplink": null,
                    "seqNum": 2,
                    "logId": 1
                }
            },
            "EntryArgs3": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the third `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020db1e973b85fb1ae9a1c9fc8603133017c4c9b28fa6301b190a51d96e1be13b31",
                    "entryHashSkiplink": null,
                    "seqNum": 3,
                    "logId": 1
                }
            },
            "EntryArgs4": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "00200ae78bf6b669d2e5eb712102a6b99326f05f1e9ddc570cbcae7353ae87f88397",
                    "entryHashSkiplink": "00200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436be",
                    "seqNum": 4,
                    "logId": 1
                }
            },
            "EntryArgs5": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020ecdbab60351505ead347827aa5c78a95dc7f98f524e978629e0e6f344680afa4",
                    "entryHashSkiplink": null,
                    "seqNum": 5,
                    "logId": 1
                }
            },
            "Author": {
                "name": "author",
                "summary": "The `Author` of the test log.",
                "value": "54b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7"
            },
            "Schema": {
                "name": "schema",
                "summary": "The `Schema` which this log is assigned",
                "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
            },
            "Entries": {
                "name": "entries",
                "summary": "All `Entries` in the test Log",
                "value": {
                    "entries": [
                        {
                            "author": "54b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7",
                            "entryBytes": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f701019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494cac3613d55f2749a83e91954b34091febcb1e564082a7ff40bc8c5e2058951d27c0deae0cf8e337bd31511b6f9299d525518d7a6bc95a466a277829d45009900",
                            "entryHash": "00200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436be",
                            "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                            "payloadHash": "0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494",
                            "logId": 1,
                            "seqNum": 1
                        },
                        {
                            "author": "54b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7",
                            "entryBytes": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7010200200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436bef9013c0020dff4ec504733e0f8ca9426206277ff4a038aee8e537f36054a3dda494ddbd5dd1de9f9cece86ea31cf6e93f67f2f8e1867c92ed50a0bacf6f234ec69ebb1b76d472f3532db61f9cc55b03dd695a7c218429e830bd7cb325479db6fbe92e2de04",
                            "entryHash": "0020db1e973b85fb1ae9a1c9fc8603133017c4c9b28fa6301b190a51d96e1be13b31",
                            "payloadBytes": "a666616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e73817844303032303063663834303438623037393839343264656261376231623966636437376361373238373636343362643366656466653631326434633666623630343336626562696478443030323030636638343034386230373938393432646562613762316239666364373763613732383736363433626433666564666536313264346336666236303433366265666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                            "payloadHash": "0020dff4ec504733e0f8ca9426206277ff4a038aee8e537f36054a3dda494ddbd5dd",
                            "logId": 1,
                            "seqNum": 2
                        },
                        {
                            "author": "54b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7",
                            "entryBytes": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f701030020db1e973b85fb1ae9a1c9fc8603133017c4c9b28fa6301b190a51d96e1be13b31f90108002018991ed82b5f845b46102c5d2e3c3b111f509f9a58ad3cbfd440fa940ac7f2f5dbda4f1b9b91f1d80f79a41bc9ea8c87d053aead18d74d4e764344772286ff72a8065b3223cf9a2a39884e4b33a51d7fef96a2c26890c0b4315fa6976593410d",
                            "entryHash": "00200ae78bf6b669d2e5eb712102a6b99326f05f1e9ddc570cbcae7353ae87f88397",
                            "payloadBytes": "a566616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e73817844303032306462316539373362383566623161653961316339666338363033313333303137633463396232386661363330316231393061353164393665316265313362333162696478443030323030636638343034386230373938393432646562613762316239666364373763613732383736363433626433666564666536313264346336666236303433366265",
                            "payloadHash": "002018991ed82b5f845b46102c5d2e3c3b111f509f9a58ad3cbfd440fa940ac7f2f5",
                            "logId": 1,
                            "seqNum": 3
                        },
                        {
                            "author": "54b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7",
                            "entryBytes": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7010400200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436be00200ae78bf6b669d2e5eb712102a6b99326f05f1e9ddc570cbcae7353ae87f883979b00205b0c87d55b707b010f29567df2e54a20618ab66aacc653b025e057d27b6e73c67d9b693f381858c8720f86f85da8766762e41da6db363916aa95952c42fe16f95dc1b5fa0651faf258f094a1ee42a9fed31fa1db96e0b4197ef638c95fcd1c0c",
                            "entryHash": "0020ecdbab60351505ead347827aa5c78a95dc7f98f524e978629e0e6f344680afa4",
                            "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565754c6574277320747279207468617420616761696e2e",
                            "payloadHash": "00205b0c87d55b707b010f29567df2e54a20618ab66aacc653b025e057d27b6e73c6",
                            "logId": 1,
                            "seqNum": 4
                        }
                    ]
                }
            }
        }
    },
    "methods": [
        {
            "name": "panda_getEntryArguments",
            "summary": "Returns arguments needed for constructing the next entry given author and schema.",
            "description": "Fetch the required arguments needed when constructing and publishing an `Entry` to a p2panda log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "author",
                    "summary": "The public key of a p2panda author",
                    "description": "Authors are hex encoded ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    }
                },
                {
                    "name": "schema",
                    "summary": "The hash of a p2panda schema",
                    "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2pandan operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example `Entry` arguments request.",
                    "summary": "An example of a valid parameters and response when making a request, based on test data.",
                    "params": [
                        {
                            "name": "author",
                            "summary": "The `Author` of the test log.",
                            "value": "54b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7"
                        },
                        {
                            "name": "schema",
                            "summary": "The `Schema` which this log is assigned",
                            "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020ecdbab60351505ead347827aa5c78a95dc7f98f524e978629e0e6f344680afa4",
                            "entryHashSkiplink": null,
                            "seqNum": 5,
                            "logId": 1
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_queryEntries",
            "summary": "Query node for encoded entries of a given schema.",
            "description": "This method returns all entries of a given schema. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "schema",
                    "summary": "The hash of a p2panda schema",
                    "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2pandan operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "number",
                                "minimum": 1
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "number",
                                "minimum": 1
                            }
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example request for the next `Entry` arguments",
                    "summary": "The parameters and response when making this request according to the test data.",
                    "params": [
                        {
                            "name": "schema",
                            "summary": "The `Schema` which this log is assigned",
                            "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
                        }
                    ],
                    "result": {
                        "name": "entries",
                        "summary": "All `Entries` in the test Log",
                        "value": {
                            "entries": [
                                {
                                    "author": "54b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7",
                                    "entryBytes": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f701019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494cac3613d55f2749a83e91954b34091febcb1e564082a7ff40bc8c5e2058951d27c0deae0cf8e337bd31511b6f9299d525518d7a6bc95a466a277829d45009900",
                                    "entryHash": "00200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436be",
                                    "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                                    "payloadHash": "0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494",
                                    "logId": 1,
                                    "seqNum": 1
                                },
                                {
                                    "author": "54b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7",
                                    "entryBytes": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7010200200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436bef9013c0020dff4ec504733e0f8ca9426206277ff4a038aee8e537f36054a3dda494ddbd5dd1de9f9cece86ea31cf6e93f67f2f8e1867c92ed50a0bacf6f234ec69ebb1b76d472f3532db61f9cc55b03dd695a7c218429e830bd7cb325479db6fbe92e2de04",
                                    "entryHash": "0020db1e973b85fb1ae9a1c9fc8603133017c4c9b28fa6301b190a51d96e1be13b31",
                                    "payloadBytes": "a666616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e73817844303032303063663834303438623037393839343264656261376231623966636437376361373238373636343362643366656466653631326434633666623630343336626562696478443030323030636638343034386230373938393432646562613762316239666364373763613732383736363433626433666564666536313264346336666236303433366265666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                                    "payloadHash": "0020dff4ec504733e0f8ca9426206277ff4a038aee8e537f36054a3dda494ddbd5dd",
                                    "logId": 1,
                                    "seqNum": 2
                                },
                                {
                                    "author": "54b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7",
                                    "entryBytes": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f701030020db1e973b85fb1ae9a1c9fc8603133017c4c9b28fa6301b190a51d96e1be13b31f90108002018991ed82b5f845b46102c5d2e3c3b111f509f9a58ad3cbfd440fa940ac7f2f5dbda4f1b9b91f1d80f79a41bc9ea8c87d053aead18d74d4e764344772286ff72a8065b3223cf9a2a39884e4b33a51d7fef96a2c26890c0b4315fa6976593410d",
                                    "entryHash": "00200ae78bf6b669d2e5eb712102a6b99326f05f1e9ddc570cbcae7353ae87f88397",
                                    "payloadBytes": "a566616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e73817844303032306462316539373362383566623161653961316339666338363033313333303137633463396232386661363330316231393061353164393665316265313362333162696478443030323030636638343034386230373938393432646562613762316239666364373763613732383736363433626433666564666536313264346336666236303433366265",
                                    "payloadHash": "002018991ed82b5f845b46102c5d2e3c3b111f509f9a58ad3cbfd440fa940ac7f2f5",
                                    "logId": 1,
                                    "seqNum": 3
                                },
                                {
                                    "author": "54b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7",
                                    "entryBytes": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7010400200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436be00200ae78bf6b669d2e5eb712102a6b99326f05f1e9ddc570cbcae7353ae87f883979b00205b0c87d55b707b010f29567df2e54a20618ab66aacc653b025e057d27b6e73c67d9b693f381858c8720f86f85da8766762e41da6db363916aa95952c42fe16f95dc1b5fa0651faf258f094a1ee42a9fed31fa1db96e0b4197ef638c95fcd1c0c",
                                    "entryHash": "0020ecdbab60351505ead347827aa5c78a95dc7f98f524e978629e0e6f344680afa4",
                                    "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565754c6574277320747279207468617420616761696e2e",
                                    "payloadHash": "00205b0c87d55b707b010f29567df2e54a20618ab66aacc653b025e057d27b6e73c6",
                                    "logId": 1,
                                    "seqNum": 4
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_publishEntry",
            "summary": "Publish an encoded entry and operation.",
            "description": "Publish a new `Entry` to a `p2panda` log. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "entryEncoded",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "operationEncoded",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "number",
                            "minimum": 1
                        },
                        "logId": {
                            "type": "number",
                            "minimum": 1
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                            "value": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f701019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494cac3613d55f2749a83e91954b34091febcb1e564082a7ff40bc8c5e2058951d27c0deae0cf8e337bd31511b6f9299d525518d7a6bc95a466a277829d45009900"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the second `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436be",
                            "entryHashSkiplink": null,
                            "seqNum": 2,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                            "value": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7010200200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436bef9013c0020dff4ec504733e0f8ca9426206277ff4a038aee8e537f36054a3dda494ddbd5dd1de9f9cece86ea31cf6e93f67f2f8e1867c92ed50a0bacf6f234ec69ebb1b76d472f3532db61f9cc55b03dd695a7c218429e830bd7cb325479db6fbe92e2de04"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                            "value": "a666616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e73817844303032303063663834303438623037393839343264656261376231623966636437376361373238373636343362643366656466653631326434633666623630343336626562696478443030323030636638343034386230373938393432646562613762316239666364373763613732383736363433626433666564666536313264346336666236303433366265666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the third `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020db1e973b85fb1ae9a1c9fc8603133017c4c9b28fa6301b190a51d96e1be13b31",
                            "entryHashSkiplink": null,
                            "seqNum": 3,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                            "value": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f701030020db1e973b85fb1ae9a1c9fc8603133017c4c9b28fa6301b190a51d96e1be13b31f90108002018991ed82b5f845b46102c5d2e3c3b111f509f9a58ad3cbfd440fa940ac7f2f5dbda4f1b9b91f1d80f79a41bc9ea8c87d053aead18d74d4e764344772286ff72a8065b3223cf9a2a39884e4b33a51d7fef96a2c26890c0b4315fa6976593410d"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017270726576696f75734f7065726174696f6e73817844303032306462316539373362383566623161653961316339666338363033313333303137633463396232386661363330316231393061353164393665316265313362333162696478443030323030636638343034386230373938393432646562613762316239666364373763613732383736363433626433666564666536313264346336666236303433366265"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00200ae78bf6b669d2e5eb712102a6b99326f05f1e9ddc570cbcae7353ae87f88397",
                            "entryHashSkiplink": "00200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436be",
                            "seqNum": 4,
                            "logId": 1
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                            "value": "0054b3f2649870e35c7529d847fc4473eb9c71273863aa2952b4a080b1fec5c2f7010400200cf84048b0798942deba7b1b9fcd77ca72876643bd3fedfe612d4c6fb60436be00200ae78bf6b669d2e5eb712102a6b99326f05f1e9ddc570cbcae7353ae87f883979b00205b0c87d55b707b010f29567df2e54a20618ab66aacc653b025e057d27b6e73c67d9b693f381858c8720f86f85da8766762e41da6db363916aa95952c42fe16f95dc1b5fa0651faf258f094a1ee42a9fed31fa1db96e0b4197ef638c95fcd1c0c"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565754c6574277320747279207468617420616761696e2e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020ecdbab60351505ead347827aa5c78a95dc7f98f524e978629e0e6f344680afa4",
                            "entryHashSkiplink": null,
                            "seqNum": 5,
                            "logId": 1
                        }
                    }
                }
            ]
        }
    ]
}