{
    "openrpc": "1.0.0-rc1",
    "info": {
        "title": "p2panda RPC interface",
        "version": "0.0.1",
        "description": "The API for a p2panda node which can be used for creating and retrieving entries on a Bamboo append-only log.",
        "contact": {
            "name": "p2panda Team",
            "email": "contributors@p2panda.org",
            "url": "https://p2panda.org"
        },
        "license": {
            "name": "GNU Affero General Public License v3.0"
        }
    },
    "servers": [
        {
            "name": "p2panda node",
            "url": "https://welle.liebechaos.org"
        }
    ],
    "components": {
        "contentDescriptors": {
            "EntryArgs": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "Author": {
                "name": "author",
                "summary": "The public key of a p2panda author",
                "description": "Authors are hex encoded Ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "pattern": "[0-9a-f]{64}",
                    "minLength": 64,
                    "maxLength": 64
                }
            },
            "Schema": {
                "name": "schema",
                "summary": "The hash of a p2panda schema",
                "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "minLength": 68,
                    "maxLength": 68,
                    "pattern": "[0-9a-f]{68}"
                }
            },
            "DocumentId": {
                "name": "document",
                "summary": "The hash identifying a document",
                "required": false,
                "schema": {
                    "type": "string",
                    "minLength": 68,
                    "maxLength": 68,
                    "pattern": "[0-9a-f]{68}"
                }
            },
            "QueryEntriesResponse": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "string"
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "Author": {
                "type": "string",
                "pattern": "[0-9a-f]{64}",
                "minLength": 64,
                "maxLength": 64
            },
            "Hash": {
                "type": "string",
                "minLength": 68,
                "maxLength": 68,
                "pattern": "[0-9a-f]{68}"
            },
            "EntryArgs": {
                "type": "object",
                "properties": {
                    "entryHashSkiplink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "entryHashBacklink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "seqNum": {
                        "type": "string"
                    },
                    "logId": {
                        "type": "string"
                    }
                }
            },
            "Entry": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    },
                    "entryBytes": {
                        "type": "string"
                    },
                    "entryHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "logId": {
                        "type": "string"
                    },
                    "payloadBytes": {
                        "type": "string"
                    },
                    "payloadHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "seqNum": {
                        "type": "string"
                    }
                }
            },
            "EntryEncoded": {
                "type": "string"
            },
            "OperationEncoded": {
                "type": "string"
            },
            "Entries": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "author": {
                            "type": "string",
                            "pattern": "[0-9a-f]{64}",
                            "minLength": 64,
                            "maxLength": 64
                        },
                        "entryBytes": {
                            "type": "string"
                        },
                        "entryHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "logId": {
                            "type": "string"
                        },
                        "payloadBytes": {
                            "type": "string"
                        },
                        "payloadHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "seqNum": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "examples": {
            "Entry1": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                "value": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc02801019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494565225898804f4dd7aa6f3efbafcc17b0f9e459672566b8a0c4b8e69b0a1d036ad2f9512a623f285d2ff4f437410276cd5dfd0edb09388a12b90fda00e6e0d0a"
            },
            "Entry2": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                "value": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc02801020020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e4132f40020b74c079a6614723a26a5fa27da12cd97daf96e2c689e5b55ffdc79d0e5c2380451ad09af8b26eeebfb9487f27034cc4182408c6e1dec65642695df51dcc8d3b64c731de915cb0a9ac77ec36b60e92199bf2d496263b08b9090f33f79324a0409"
            },
            "Entry3": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                "value": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028010300204e1b62a95394ea40d9f05dd95c3c01b2825d9b10fb99e0123b7ad2ad77b1842af70020565ee44ed5bbc516eecaae77df6cdcaf7fd0fae6b691a23ed39beb151ea8cab1fba1e252e0ba79deb2e177867e934e78294d86dfc80a22de1db25dfdaa5eb0c03fc74235045c720b80c659cf0a6a4f427727cccd73ccb846d4c6e46a27bb2d0e"
            },
            "Entry4": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                "value": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc02801040020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e41320020afe9817d2e23f3cea3ff650897ca55f9d49dd08099809bd752f6024f737c826ac000200a06ed984c26dcdd49a39f07556bcf5c6570cba7258d9720c553f02d74451010b79bfad390bc6374395627858fd24d59f9b69ce933a87d5d0fe291e325a9ee3f9169cf90c5158e1f4abcae60bf37ffce9e5145841ce7963dfbaaadd5649dab0d"
            },
            "Operation1": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
            },
            "Operation2": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323064336365346538353232323031376666636234653565653033323731366532653339313437383337396132396532356263333564373464643631346534313332666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
            },
            "Operation3": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323034653162363261393533393465613430643966303564643935633363303162323832356439623130666239396530313233623761643261643737623138343261666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e"
            },
            "Operation4": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323061666539383137643265323366336365613366663635303839376361353566396434396464303830393938303962643735326636303234663733376338323661"
            },
            "EntryArgs1": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the first `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": null,
                    "entryHashSkiplink": null,
                    "seqNum": "1",
                    "logId": "1"
                }
            },
            "EntryArgs2": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the second `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e4132",
                    "entryHashSkiplink": null,
                    "seqNum": "2",
                    "logId": "1"
                }
            },
            "EntryArgs3": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the third `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "00204e1b62a95394ea40d9f05dd95c3c01b2825d9b10fb99e0123b7ad2ad77b1842a",
                    "entryHashSkiplink": null,
                    "seqNum": "3",
                    "logId": "1"
                }
            },
            "EntryArgs4": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "0020afe9817d2e23f3cea3ff650897ca55f9d49dd08099809bd752f6024f737c826a",
                    "entryHashSkiplink": "0020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e4132",
                    "seqNum": "4",
                    "logId": "1"
                }
            },
            "EntryArgs5": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "00200d712a2b12f61c495ce9b860801ad8b5a9d395872bee43c31484ba7eb82080d9",
                    "entryHashSkiplink": null,
                    "seqNum": "5",
                    "logId": "1"
                }
            },
            "Author": {
                "name": "author",
                "summary": "The `Author` of the test log.",
                "value": "03251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028"
            },
            "Schema": {
                "name": "schema",
                "summary": "The used `Schema` for the application data",
                "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
            },
            "DocumentId": {
                "name": "document",
                "summary": "The `DocumentId` which this log is assigned",
                "value": "0020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e4132"
            },
            "Entries": {
                "name": "entries",
                "summary": "All `Entries` in the test Log",
                "value": {
                    "entries": [
                        {
                            "author": "03251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028",
                            "entryBytes": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc02801019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494565225898804f4dd7aa6f3efbafcc17b0f9e459672566b8a0c4b8e69b0a1d036ad2f9512a623f285d2ff4f437410276cd5dfd0edb09388a12b90fda00e6e0d0a",
                            "entryHash": "0020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e4132",
                            "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                            "payloadHash": "0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494",
                            "logId": "1",
                            "seqNum": "1"
                        },
                        {
                            "author": "03251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028",
                            "entryBytes": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc02801020020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e4132f40020b74c079a6614723a26a5fa27da12cd97daf96e2c689e5b55ffdc79d0e5c2380451ad09af8b26eeebfb9487f27034cc4182408c6e1dec65642695df51dcc8d3b64c731de915cb0a9ac77ec36b60e92199bf2d496263b08b9090f33f79324a0409",
                            "entryHash": "00204e1b62a95394ea40d9f05dd95c3c01b2825d9b10fb99e0123b7ad2ad77b1842a",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323064336365346538353232323031376666636234653565653033323731366532653339313437383337396132396532356263333564373464643631346534313332666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                            "payloadHash": "0020b74c079a6614723a26a5fa27da12cd97daf96e2c689e5b55ffdc79d0e5c23804",
                            "logId": "1",
                            "seqNum": "2"
                        },
                        {
                            "author": "03251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028",
                            "entryBytes": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028010300204e1b62a95394ea40d9f05dd95c3c01b2825d9b10fb99e0123b7ad2ad77b1842af70020565ee44ed5bbc516eecaae77df6cdcaf7fd0fae6b691a23ed39beb151ea8cab1fba1e252e0ba79deb2e177867e934e78294d86dfc80a22de1db25dfdaa5eb0c03fc74235045c720b80c659cf0a6a4f427727cccd73ccb846d4c6e46a27bb2d0e",
                            "entryHash": "0020afe9817d2e23f3cea3ff650897ca55f9d49dd08099809bd752f6024f737c826a",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323034653162363261393533393465613430643966303564643935633363303162323832356439623130666239396530313233623761643261643737623138343261666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e",
                            "payloadHash": "0020565ee44ed5bbc516eecaae77df6cdcaf7fd0fae6b691a23ed39beb151ea8cab1",
                            "logId": "1",
                            "seqNum": "3"
                        },
                        {
                            "author": "03251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028",
                            "entryBytes": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc02801040020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e41320020afe9817d2e23f3cea3ff650897ca55f9d49dd08099809bd752f6024f737c826ac000200a06ed984c26dcdd49a39f07556bcf5c6570cba7258d9720c553f02d74451010b79bfad390bc6374395627858fd24d59f9b69ce933a87d5d0fe291e325a9ee3f9169cf90c5158e1f4abcae60bf37ffce9e5145841ce7963dfbaaadd5649dab0d",
                            "entryHash": "00200d712a2b12f61c495ce9b860801ad8b5a9d395872bee43c31484ba7eb82080d9",
                            "payloadBytes": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323061666539383137643265323366336365613366663635303839376361353566396434396464303830393938303962643735326636303234663733376338323661",
                            "payloadHash": "00200a06ed984c26dcdd49a39f07556bcf5c6570cba7258d9720c553f02d74451010",
                            "logId": "1",
                            "seqNum": "4"
                        }
                    ]
                }
            }
        }
    },
    "methods": [
        {
            "name": "panda_getEntryArguments",
            "summary": "Returns arguments needed for constructing the next entry given author and document id.",
            "description": "Fetch the required arguments needed when constructing and publishing an `Entry` to a p2panda log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "author",
                    "summary": "The public key of a p2panda author",
                    "description": "Authors are hex encoded Ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    }
                },
                {
                    "name": "document",
                    "summary": "The hash identifying a document",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example `Entry` arguments request.",
                    "summary": "An example of a valid parameters and response when making a request, based on test data.",
                    "params": [
                        {
                            "name": "author",
                            "summary": "The `Author` of the test log.",
                            "value": "03251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028"
                        },
                        {
                            "name": "document",
                            "summary": "The `DocumentId` which this log is assigned",
                            "value": "0020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e4132"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00200d712a2b12f61c495ce9b860801ad8b5a9d395872bee43c31484ba7eb82080d9",
                            "entryHashSkiplink": null,
                            "seqNum": "5",
                            "logId": "1"
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_queryEntries",
            "summary": "Query node for encoded entries of a given schema.",
            "description": "This method returns all entries of a given schema. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "schema",
                    "summary": "The hash of a p2panda schema",
                    "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "string"
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example request for the next `Entry` arguments",
                    "summary": "The parameters and response when making this request according to the test data.",
                    "params": [
                        {
                            "name": "schema",
                            "summary": "The used `Schema` for the application data",
                            "value": "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
                        }
                    ],
                    "result": {
                        "name": "entries",
                        "summary": "All `Entries` in the test Log",
                        "value": {
                            "entries": [
                                {
                                    "author": "03251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028",
                                    "entryBytes": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc02801019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494565225898804f4dd7aa6f3efbafcc17b0f9e459672566b8a0c4b8e69b0a1d036ad2f9512a623f285d2ff4f437410276cd5dfd0edb09388a12b90fda00e6e0d0a",
                                    "entryHash": "0020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e4132",
                                    "payloadBytes": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                                    "payloadHash": "0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494",
                                    "logId": "1",
                                    "seqNum": "1"
                                },
                                {
                                    "author": "03251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028",
                                    "entryBytes": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc02801020020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e4132f40020b74c079a6614723a26a5fa27da12cd97daf96e2c689e5b55ffdc79d0e5c2380451ad09af8b26eeebfb9487f27034cc4182408c6e1dec65642695df51dcc8d3b64c731de915cb0a9ac77ec36b60e92199bf2d496263b08b9090f33f79324a0409",
                                    "entryHash": "00204e1b62a95394ea40d9f05dd95c3c01b2825d9b10fb99e0123b7ad2ad77b1842a",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323064336365346538353232323031376666636234653565653033323731366532653339313437383337396132396532356263333564373464643631346534313332666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                                    "payloadHash": "0020b74c079a6614723a26a5fa27da12cd97daf96e2c689e5b55ffdc79d0e5c23804",
                                    "logId": "1",
                                    "seqNum": "2"
                                },
                                {
                                    "author": "03251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028",
                                    "entryBytes": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028010300204e1b62a95394ea40d9f05dd95c3c01b2825d9b10fb99e0123b7ad2ad77b1842af70020565ee44ed5bbc516eecaae77df6cdcaf7fd0fae6b691a23ed39beb151ea8cab1fba1e252e0ba79deb2e177867e934e78294d86dfc80a22de1db25dfdaa5eb0c03fc74235045c720b80c659cf0a6a4f427727cccd73ccb846d4c6e46a27bb2d0e",
                                    "entryHash": "0020afe9817d2e23f3cea3ff650897ca55f9d49dd08099809bd752f6024f737c826a",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323034653162363261393533393465613430643966303564643935633363303162323832356439623130666239396530313233623761643261643737623138343261666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e",
                                    "payloadHash": "0020565ee44ed5bbc516eecaae77df6cdcaf7fd0fae6b691a23ed39beb151ea8cab1",
                                    "logId": "1",
                                    "seqNum": "3"
                                },
                                {
                                    "author": "03251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028",
                                    "entryBytes": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc02801040020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e41320020afe9817d2e23f3cea3ff650897ca55f9d49dd08099809bd752f6024f737c826ac000200a06ed984c26dcdd49a39f07556bcf5c6570cba7258d9720c553f02d74451010b79bfad390bc6374395627858fd24d59f9b69ce933a87d5d0fe291e325a9ee3f9169cf90c5158e1f4abcae60bf37ffce9e5145841ce7963dfbaaadd5649dab0d",
                                    "entryHash": "00200d712a2b12f61c495ce9b860801ad8b5a9d395872bee43c31484ba7eb82080d9",
                                    "payloadBytes": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323061666539383137643265323366336365613366663635303839376361353566396434396464303830393938303962643735326636303234663733376338323661",
                                    "payloadHash": "00200a06ed984c26dcdd49a39f07556bcf5c6570cba7258d9720c553f02d74451010",
                                    "logId": "1",
                                    "seqNum": "4"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_publishEntry",
            "summary": "Publish an encoded entry and operation.",
            "description": "Publish a new `Entry` to a `p2panda` log. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "entryEncoded",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "operationEncoded",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                            "value": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc02801019c0020bbf34ae370b167c4950df17089ca322965c4e5c92e1b13a1f0fc4d62ce82e494565225898804f4dd7aa6f3efbafcc17b0f9e459672566b8a0c4b8e69b0a1d036ad2f9512a623f285d2ff4f437410276cd5dfd0edb09388a12b90fda00e6e0d0a"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6663726561746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the second `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e4132",
                            "entryHashSkiplink": null,
                            "seqNum": "2",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                            "value": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc02801020020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e4132f40020b74c079a6614723a26a5fa27da12cd97daf96e2c689e5b55ffdc79d0e5c2380451ad09af8b26eeebfb9487f27034cc4182408c6e1dec65642695df51dcc8d3b64c731de915cb0a9ac77ec36b60e92199bf2d496263b08b9090f33f79324a0409"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323064336365346538353232323031376666636234653565653033323731366532653339313437383337396132396532356263333564373464643631346534313332666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the third `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00204e1b62a95394ea40d9f05dd95c3c01b2825d9b10fb99e0123b7ad2ad77b1842a",
                            "entryHashSkiplink": null,
                            "seqNum": "3",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                            "value": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc028010300204e1b62a95394ea40d9f05dd95c3c01b2825d9b10fb99e0123b7ad2ad77b1842af70020565ee44ed5bbc516eecaae77df6cdcaf7fd0fae6b691a23ed39beb151ea8cab1fba1e252e0ba79deb2e177867e934e78294d86dfc80a22de1db25dfdaa5eb0c03fc74235045c720b80c659cf0a6a4f427727cccd73ccb846d4c6e46a27bb2d0e"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323034653162363261393533393465613430643966303564643935633363303162323832356439623130666239396530313233623761643261643737623138343261666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "0020afe9817d2e23f3cea3ff650897ca55f9d49dd08099809bd752f6024f737c826a",
                            "entryHashSkiplink": "0020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e4132",
                            "seqNum": "4",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                            "value": "0003251cf0c3ecbf84acad6e52d353a47ef25f0238f5de58bd95900b1321ebc02801040020d3ce4e85222017ffcb4e5ee032716e2e391478379a29e25bc35d74dd614e41320020afe9817d2e23f3cea3ff650897ca55f9d49dd08099809bd752f6024f737c826ac000200a06ed984c26dcdd49a39f07556bcf5c6570cba7258d9720c553f02d74451010b79bfad390bc6374395627858fd24d59f9b69ce933a87d5d0fe291e325a9ee3f9169cf90c5158e1f4abcae60bf37ffce9e5145841ce7963dfbaaadd5649dab0d"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6664656c65746566736368656d61784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323061666539383137643265323366336365613366663635303839376361353566396434396464303830393938303962643735326636303234663733376338323661"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00200d712a2b12f61c495ce9b860801ad8b5a9d395872bee43c31484ba7eb82080d9",
                            "entryHashSkiplink": null,
                            "seqNum": "5",
                            "logId": "1"
                        }
                    }
                }
            ]
        }
    ]
}