{
    "openrpc": "1.0.0-rc1",
    "info": {
        "title": "p2panda RPC interface",
        "version": "0.0.1",
        "description": "The API for a p2panda node which can be used for creating and retrieving entries on a Bamboo append-only log.",
        "contact": {
            "name": "p2panda Team",
            "email": "contributors@p2panda.org",
            "url": "https://p2panda.org"
        },
        "license": {
            "name": "GNU Affero General Public License v3.0"
        }
    },
    "servers": [
        {
            "name": "p2panda node",
            "url": "https://welle.liebechaos.org"
        }
    ],
    "components": {
        "contentDescriptors": {
            "EntryArgs": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "Author": {
                "name": "author",
                "summary": "The public key of a p2panda author",
                "description": "Authors are hex encoded Ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "string",
                    "pattern": "[0-9a-f]{64}",
                    "minLength": 64,
                    "maxLength": 64
                }
            },
            "Schema": {
                "name": "schema",
                "summary": "The document view id of a p2panda schema",
                "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "oneOf": [
                        {
                            "const": "schema_v1"
                        },
                        {
                            "const": "schema_field_v1"
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        }
                    ]
                }
            },
            "DocumentId": {
                "name": "document",
                "summary": "The hash identifying a document",
                "required": false,
                "schema": {
                    "type": "string",
                    "minLength": 68,
                    "maxLength": 68,
                    "pattern": "[0-9a-f]{68}"
                }
            },
            "QueryEntriesResponse": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "string"
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "Author": {
                "type": "string",
                "pattern": "[0-9a-f]{64}",
                "minLength": 64,
                "maxLength": 64
            },
            "Hash": {
                "type": "string",
                "minLength": 68,
                "maxLength": 68,
                "pattern": "[0-9a-f]{68}"
            },
            "SchemaId": {
                "oneOf": [
                    {
                        "const": "schema_v1"
                    },
                    {
                        "const": "schema_field_v1"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        }
                    }
                ]
            },
            "EntryArgs": {
                "type": "object",
                "properties": {
                    "entryHashSkiplink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "entryHashBacklink": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            }
                        ]
                    },
                    "seqNum": {
                        "type": "string"
                    },
                    "logId": {
                        "type": "string"
                    }
                }
            },
            "Entry": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    },
                    "entryBytes": {
                        "type": "string"
                    },
                    "entryHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "logId": {
                        "type": "string"
                    },
                    "payloadBytes": {
                        "type": "string"
                    },
                    "payloadHash": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    },
                    "seqNum": {
                        "type": "string"
                    }
                }
            },
            "EntryEncoded": {
                "type": "string"
            },
            "OperationEncoded": {
                "type": "string"
            },
            "Entries": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "author": {
                            "type": "string",
                            "pattern": "[0-9a-f]{64}",
                            "minLength": 64,
                            "maxLength": 64
                        },
                        "entryBytes": {
                            "type": "string"
                        },
                        "entryHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "logId": {
                            "type": "string"
                        },
                        "payloadBytes": {
                            "type": "string"
                        },
                        "payloadHash": {
                            "type": "string",
                            "minLength": 68,
                            "maxLength": 68,
                            "pattern": "[0-9a-f]{68}"
                        },
                        "seqNum": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "examples": {
            "Entry1": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                "value": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b01019d0020343e90bcfd50d3953abc23342d2653ea96c892a0c6018bed8b1fa956af15b4551dfce14760766eddda388e1830e69ef253e3d61f1bdafe90c323d4f273fe1de4dce7a9543dbe7fccc2fd9abe4b65e223a16d2baf743cbc94803db2eff4086d09"
            },
            "Entry2": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                "value": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b010200202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679ef5002053d1d4895b3061b8873516e864caac456db6b39191a0ed90f4d2c4b2eb527fa20741b6896dcc914f862711fd4e5e0adff36d3a6269b9fbabef2aa329932a341d3e9b29bc5772eeec2611c1a227c111ef71ed8f148845069d5413e2908bdbc507"
            },
            "Entry3": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                "value": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b0103002025ec7c3aa2d2550493b5c39d45b77810feaaf292f8816acbbf0711791da601ebf8f80020d5df511308ec61d321a2e8c8cade55023f1ab6184c1d3d13708600f14ec13de165a665a24a3efd1c9513cd38823e6033780e4adbdb8b5c259aa0c861ef64cae968e93ed5e9aacd24c7169b9a1431c7e6606e9d22cf672eb64358bfaf8cbc9108"
            },
            "Entry4": {
                "name": "entryEncoded",
                "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                "value": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b010400202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679e002097b9759d06cac7a8bc2700328af635b3b9699c2c647b715997f96ebbbcc4834bc10020ed55efd2c4c3618f5d829976cf1ff5538ba34f897a8e1e0b3b510720a9f430157d540c2068a692ab5047b5bf31ba4a405503ebb3e87b3038dece03fb58851209b727ea3800684cbaaa9c07856ed47a00c695445362c6e33aada17aece54ba00f"
            },
            "Operation1": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6663726561746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
            },
            "Operation2": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323032616265386330326539636237653236626531613639636465343231633566376530333733343534636365333066356234316631646333366466393036373965666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
            },
            "Operation3": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                "value": "a566616374696f6e6675706461746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323032356563376333616132643235353034393362356333396434356237373831306665616166323932663838313661636262663037313137393164613630316562666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e"
            },
            "Operation4": {
                "name": "operationEncoded",
                "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                "value": "a466616374696f6e6664656c65746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323039376239373539643036636163376138626332373030333238616636333562336239363939633263363437623731353939376639366562626263633438333462"
            },
            "EntryArgs1": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the first `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": null,
                    "entryHashSkiplink": null,
                    "seqNum": "1",
                    "logId": "1"
                }
            },
            "EntryArgs2": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the second `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "00202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679e",
                    "entryHashSkiplink": null,
                    "seqNum": "2",
                    "logId": "1"
                }
            },
            "EntryArgs3": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the third `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "002025ec7c3aa2d2550493b5c39d45b77810feaaf292f8816acbbf0711791da601eb",
                    "entryHashSkiplink": null,
                    "seqNum": "3",
                    "logId": "1"
                }
            },
            "EntryArgs4": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "002097b9759d06cac7a8bc2700328af635b3b9699c2c647b715997f96ebbbcc4834b",
                    "entryHashSkiplink": "00202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679e",
                    "seqNum": "4",
                    "logId": "1"
                }
            },
            "EntryArgs5": {
                "name": "nextEntryArgs",
                "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                "value": {
                    "entryHashBacklink": "00200eea66a9f3eef808901edb1a5fa0ba667780b5fd4a1ac696e7524c62d016e7fc",
                    "entryHashSkiplink": null,
                    "seqNum": "5",
                    "logId": "1"
                }
            },
            "Author": {
                "name": "author",
                "summary": "The `Author` of the test log.",
                "value": "16521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b"
            },
            "Schema": {
                "name": "schema",
                "summary": "The used `Schema` for the application data",
                "value": [
                    "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
                ]
            },
            "DocumentId": {
                "name": "document",
                "summary": "The `DocumentId` which this log is assigned",
                "value": "00202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679e"
            },
            "Entries": {
                "name": "entries",
                "summary": "All `Entries` in the test Log",
                "value": {
                    "entries": [
                        {
                            "author": "16521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b",
                            "entryBytes": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b01019d0020343e90bcfd50d3953abc23342d2653ea96c892a0c6018bed8b1fa956af15b4551dfce14760766eddda388e1830e69ef253e3d61f1bdafe90c323d4f273fe1de4dce7a9543dbe7fccc2fd9abe4b65e223a16d2baf743cbc94803db2eff4086d09",
                            "entryHash": "00202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679e",
                            "payloadBytes": "a466616374696f6e6663726561746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                            "payloadHash": "0020343e90bcfd50d3953abc23342d2653ea96c892a0c6018bed8b1fa956af15b455",
                            "logId": "1",
                            "seqNum": "1"
                        },
                        {
                            "author": "16521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b",
                            "entryBytes": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b010200202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679ef5002053d1d4895b3061b8873516e864caac456db6b39191a0ed90f4d2c4b2eb527fa20741b6896dcc914f862711fd4e5e0adff36d3a6269b9fbabef2aa329932a341d3e9b29bc5772eeec2611c1a227c111ef71ed8f148845069d5413e2908bdbc507",
                            "entryHash": "002025ec7c3aa2d2550493b5c39d45b77810feaaf292f8816acbbf0711791da601eb",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323032616265386330326539636237653236626531613639636465343231633566376530333733343534636365333066356234316631646333366466393036373965666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                            "payloadHash": "002053d1d4895b3061b8873516e864caac456db6b39191a0ed90f4d2c4b2eb527fa2",
                            "logId": "1",
                            "seqNum": "2"
                        },
                        {
                            "author": "16521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b",
                            "entryBytes": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b0103002025ec7c3aa2d2550493b5c39d45b77810feaaf292f8816acbbf0711791da601ebf8f80020d5df511308ec61d321a2e8c8cade55023f1ab6184c1d3d13708600f14ec13de165a665a24a3efd1c9513cd38823e6033780e4adbdb8b5c259aa0c861ef64cae968e93ed5e9aacd24c7169b9a1431c7e6606e9d22cf672eb64358bfaf8cbc9108",
                            "entryHash": "002097b9759d06cac7a8bc2700328af635b3b9699c2c647b715997f96ebbbcc4834b",
                            "payloadBytes": "a566616374696f6e6675706461746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323032356563376333616132643235353034393362356333396434356237373831306665616166323932663838313661636262663037313137393164613630316562666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e",
                            "payloadHash": "0020d5df511308ec61d321a2e8c8cade55023f1ab6184c1d3d13708600f14ec13de1",
                            "logId": "1",
                            "seqNum": "3"
                        },
                        {
                            "author": "16521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b",
                            "entryBytes": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b010400202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679e002097b9759d06cac7a8bc2700328af635b3b9699c2c647b715997f96ebbbcc4834bc10020ed55efd2c4c3618f5d829976cf1ff5538ba34f897a8e1e0b3b510720a9f430157d540c2068a692ab5047b5bf31ba4a405503ebb3e87b3038dece03fb58851209b727ea3800684cbaaa9c07856ed47a00c695445362c6e33aada17aece54ba00f",
                            "entryHash": "00200eea66a9f3eef808901edb1a5fa0ba667780b5fd4a1ac696e7524c62d016e7fc",
                            "payloadBytes": "a466616374696f6e6664656c65746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323039376239373539643036636163376138626332373030333238616636333562336239363939633263363437623731353939376639366562626263633438333462",
                            "payloadHash": "0020ed55efd2c4c3618f5d829976cf1ff5538ba34f897a8e1e0b3b510720a9f43015",
                            "logId": "1",
                            "seqNum": "4"
                        }
                    ]
                }
            }
        }
    },
    "methods": [
        {
            "name": "panda_getEntryArguments",
            "summary": "Returns arguments needed for constructing the next entry given author and document id.",
            "description": "Fetch the required arguments needed when constructing and publishing an `Entry` to a p2panda log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "author",
                    "summary": "The public key of a p2panda author",
                    "description": "Authors are hex encoded Ed25519 public key strings. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "pattern": "[0-9a-f]{64}",
                        "minLength": 64,
                        "maxLength": 64
                    }
                },
                {
                    "name": "document",
                    "summary": "The hash identifying a document",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "minLength": 68,
                        "maxLength": 68,
                        "pattern": "[0-9a-f]{68}"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example `Entry` arguments request.",
                    "summary": "An example of a valid parameters and response when making a request, based on test data.",
                    "params": [
                        {
                            "name": "author",
                            "summary": "The `Author` of the test log.",
                            "value": "16521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b"
                        },
                        {
                            "name": "document",
                            "summary": "The `DocumentId` which this log is assigned",
                            "value": "00202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00200eea66a9f3eef808901edb1a5fa0ba667780b5fd4a1ac696e7524c62d016e7fc",
                            "entryHashSkiplink": null,
                            "seqNum": "5",
                            "logId": "1"
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_queryEntries",
            "summary": "Query node for encoded entries of a given schema.",
            "description": "This method returns all entries of a given schema. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "schema",
                    "summary": "The document view id of a p2panda schema",
                    "description": "Validation for operation payloads and definitions of system schemas. This uses `Concise Data Definition Language` ([CDDL](https://datatracker.ietf.org/doc/html/rfc8610)) internally to verify [CBOR](https://cbor.io/) data of p2panda operations. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                    "required": true,
                    "schema": {
                        "oneOf": [
                            {
                                "const": "schema_v1"
                            },
                            {
                                "const": "schema_field_v1"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "entries",
                "summary": "The response from a call to panda_queryEntries",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "pattern": "[0-9a-f]{64}",
                                "minLength": 64,
                                "maxLength": 64
                            },
                            "entryBytes": {
                                "type": "string"
                            },
                            "entryHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "logId": {
                                "type": "string"
                            },
                            "payloadBytes": {
                                "type": "string"
                            },
                            "payloadHash": {
                                "type": "string",
                                "minLength": 68,
                                "maxLength": 68,
                                "pattern": "[0-9a-f]{68}"
                            },
                            "seqNum": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example request for the next `Entry` arguments",
                    "summary": "The parameters and response when making this request according to the test data.",
                    "params": [
                        {
                            "name": "schema",
                            "summary": "The used `Schema` for the application data",
                            "value": [
                                "0020c65567ae37efea293e34a9c7d13f8f2bf23dbdc3b5c7b9ab46293111c48fc78b"
                            ]
                        }
                    ],
                    "result": {
                        "name": "entries",
                        "summary": "All `Entries` in the test Log",
                        "value": {
                            "entries": [
                                {
                                    "author": "16521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b",
                                    "entryBytes": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b01019d0020343e90bcfd50d3953abc23342d2653ea96c892a0c6018bed8b1fa956af15b4551dfce14760766eddda388e1830e69ef253e3d61f1bdafe90c323d4f273fe1de4dce7a9543dbe7fccc2fd9abe4b65e223a16d2baf743cbc94803db2eff4086d09",
                                    "entryHash": "00202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679e",
                                    "payloadBytes": "a466616374696f6e6663726561746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521",
                                    "payloadHash": "0020343e90bcfd50d3953abc23342d2653ea96c892a0c6018bed8b1fa956af15b455",
                                    "logId": "1",
                                    "seqNum": "1"
                                },
                                {
                                    "author": "16521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b",
                                    "entryBytes": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b010200202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679ef5002053d1d4895b3061b8873516e864caac456db6b39191a0ed90f4d2c4b2eb527fa20741b6896dcc914f862711fd4e5e0adff36d3a6269b9fbabef2aa329932a341d3e9b29bc5772eeec2611c1a227c111ef71ed8f148845069d5413e2908bdbc507",
                                    "entryHash": "002025ec7c3aa2d2550493b5c39d45b77810feaaf292f8816acbbf0711791da601eb",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323032616265386330326539636237653236626531613639636465343231633566376530333733343534636365333066356234316631646333366466393036373965666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e",
                                    "payloadHash": "002053d1d4895b3061b8873516e864caac456db6b39191a0ed90f4d2c4b2eb527fa2",
                                    "logId": "1",
                                    "seqNum": "2"
                                },
                                {
                                    "author": "16521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b",
                                    "entryBytes": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b0103002025ec7c3aa2d2550493b5c39d45b77810feaaf292f8816acbbf0711791da601ebf8f80020d5df511308ec61d321a2e8c8cade55023f1ab6184c1d3d13708600f14ec13de165a665a24a3efd1c9513cd38823e6033780e4adbdb8b5c259aa0c861ef64cae968e93ed5e9aacd24c7169b9a1431c7e6606e9d22cf672eb64358bfaf8cbc9108",
                                    "entryHash": "002097b9759d06cac7a8bc2700328af635b3b9699c2c647b715997f96ebbbcc4834b",
                                    "payloadBytes": "a566616374696f6e6675706461746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323032356563376333616132643235353034393362356333396434356237373831306665616166323932663838313661636262663037313137393164613630316562666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e",
                                    "payloadHash": "0020d5df511308ec61d321a2e8c8cade55023f1ab6184c1d3d13708600f14ec13de1",
                                    "logId": "1",
                                    "seqNum": "3"
                                },
                                {
                                    "author": "16521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b",
                                    "entryBytes": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b010400202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679e002097b9759d06cac7a8bc2700328af635b3b9699c2c647b715997f96ebbbcc4834bc10020ed55efd2c4c3618f5d829976cf1ff5538ba34f897a8e1e0b3b510720a9f430157d540c2068a692ab5047b5bf31ba4a405503ebb3e87b3038dece03fb58851209b727ea3800684cbaaa9c07856ed47a00c695445362c6e33aada17aece54ba00f",
                                    "entryHash": "00200eea66a9f3eef808901edb1a5fa0ba667780b5fd4a1ac696e7524c62d016e7fc",
                                    "payloadBytes": "a466616374696f6e6664656c65746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323039376239373539643036636163376138626332373030333238616636333562336239363939633263363437623731353939376639366562626263633438333462",
                                    "payloadHash": "0020ed55efd2c4c3618f5d829976cf1ff5538ba34f897a8e1e0b3b510720a9f43015",
                                    "logId": "1",
                                    "seqNum": "4"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "panda_publishEntry",
            "summary": "Publish an encoded entry and operation.",
            "description": "Publish a new `Entry` to a `p2panda` log. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
            "paramStructure": "by-name",
            "params": [
                {
                    "name": "entryEncoded",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "operationEncoded",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "result": {
                "name": "nextEntryArgs",
                "summary": "Values required for publishing a p2panda entry",
                "description": "The values for `entryHashSkiplink`, `entryHashBacklink`, `seqNum` and `logId` must be fetched from a node before constructung and publishing a new entry to the specified log. `p2panda` logs are based on the [Bamboo](https://github.com/AljoschaMeyer/bamboo) append only log specification. See the [p2panda-rs](https://github.com/p2panda/p2panda/tree/main/p2panda-rs) and [p2panda-js](https://github.com/p2panda/p2panda/tree/main/p2panda-js) libraries or the p2panda [handbook](https://github.com/p2panda/handbook) for more information.",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "entryHashSkiplink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "entryHashBacklink": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "minLength": 68,
                                    "maxLength": 68,
                                    "pattern": "[0-9a-f]{68}"
                                }
                            ]
                        },
                        "seqNum": {
                            "type": "string"
                        },
                        "logId": {
                            "type": "string"
                        }
                    }
                }
            },
            "examples": [
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the first entry in a p2panda `Bamboo` log.",
                            "value": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b01019d0020343e90bcfd50d3953abc23342d2653ea96c892a0c6018bed8b1fa956af15b4551dfce14760766eddda388e1830e69ef253e3d61f1bdafe90c323d4f273fe1de4dce7a9543dbe7fccc2fd9abe4b65e223a16d2baf743cbc94803db2eff4086d09"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6663726561746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e01666669656c6473a1676d657373616765a26474797065637374726576616c7565764f68682c206d79206669727374206d65737361676521"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the second `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679e",
                            "entryHashSkiplink": null,
                            "seqNum": "2",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the second entry in a p2panda `Bamboo` log.",
                            "value": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b010200202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679ef5002053d1d4895b3061b8873516e864caac456db6b39191a0ed90f4d2c4b2eb527fa20741b6896dcc914f862711fd4e5e0adff36d3a6269b9fbabef2aa329932a341d3e9b29bc5772eeec2611c1a227c111ef71ed8f148845069d5413e2908bdbc507"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the second entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323032616265386330326539636237653236626531613639636465343231633566376530333733343534636365333066356234316631646333366466393036373965666669656c6473a1676d657373616765a26474797065637374726576616c75657357686963682049206e6f77207570646174652e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the third `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "002025ec7c3aa2d2550493b5c39d45b77810feaaf292f8816acbbf0711791da601eb",
                            "entryHashSkiplink": null,
                            "seqNum": "3",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the third entry in a p2panda `Bamboo` log.",
                            "value": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b0103002025ec7c3aa2d2550493b5c39d45b77810feaaf292f8816acbbf0711791da601ebf8f80020d5df511308ec61d321a2e8c8cade55023f1ab6184c1d3d13708600f14ec13de165a665a24a3efd1c9513cd38823e6033780e4adbdb8b5c259aa0c861ef64cae968e93ed5e9aacd24c7169b9a1431c7e6606e9d22cf672eb64358bfaf8cbc9108"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the third entry in a p2panda `Bamboo` log.",
                            "value": "a566616374696f6e6675706461746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323032356563376333616132643235353034393362356333396434356237373831306665616166323932663838313661636262663037313137393164613630316562666669656c6473a1676d657373616765a26474797065637374726576616c756576416e64207468656e2075706461746520616761696e2e"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing the forth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "002097b9759d06cac7a8bc2700328af635b3b9699c2c647b715997f96ebbbcc4834b",
                            "entryHashSkiplink": "00202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679e",
                            "seqNum": "4",
                            "logId": "1"
                        }
                    }
                },
                {
                    "name": "Example for publishing an `Entry`",
                    "summary": "Example of valid parameters for publishing a new `Entry` on the test log. Returns the `Entry` arguments required for publishing the next `Entry` on our log.",
                    "params": [
                        {
                            "name": "entryEncoded",
                            "summary": "Encoded bytes of the forth entry in a p2panda `Bamboo` log.",
                            "value": "0016521781a20279e007ba6107af048862d2dc1aad8a3203bc4d67aa0fea63469b010400202abe8c02e9cb7e26be1a69cde421c5f7e0373454cce30f5b41f1dc36df90679e002097b9759d06cac7a8bc2700328af635b3b9699c2c647b715997f96ebbbcc4834bc10020ed55efd2c4c3618f5d829976cf1ff5538ba34f897a8e1e0b3b510720a9f430157d540c2068a692ab5047b5bf31ba4a405503ebb3e87b3038dece03fb58851209b727ea3800684cbaaa9c07856ed47a00c695445362c6e33aada17aece54ba00f"
                        },
                        {
                            "name": "operationEncoded",
                            "summary": "Encoded bytes of the payload of the first entry in a p2panda `Bamboo` log.",
                            "value": "a466616374696f6e6664656c65746566736368656d6181784430303230633635353637616533376566656132393365333461396337643133663866326266323364626463336235633762396162343632393331313163343866633738626776657273696f6e017370726576696f75735f6f7065726174696f6e738178443030323039376239373539643036636163376138626332373030333238616636333562336239363939633263363437623731353939376639366562626263633438333462"
                        }
                    ],
                    "result": {
                        "name": "nextEntryArgs",
                        "summary": "The arguments required for publishing a new fifth `Entry` to the test log.",
                        "value": {
                            "entryHashBacklink": "00200eea66a9f3eef808901edb1a5fa0ba667780b5fd4a1ac696e7524c62d016e7fc",
                            "entryHashSkiplink": null,
                            "seqNum": "5",
                            "logId": "1"
                        }
                    }
                }
            ]
        }
    ]
}