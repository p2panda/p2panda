name: Check and test p2panda-rs

on: push

env:
  CARGO_TERM_COLOR: always

jobs:
  rust-test:
    uses: p2panda/p2panda/.github/workflows/rust-test.yml@clippy-ci

  rust-check:
    runs-on: ubuntu-latest
    needs: rust-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Restore from cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/work/p2panda/p2panda/p2panda-rs/target
            ~/work/p2panda/p2panda/p2panda-rs/Cargo.lock
            ~/.cargo/bin
            ~/.cargo/git/db
            ~/.cargo/registry/cache
            ~/.cargo/registry/index
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - name: Check project and dependencies
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path p2panda-rs/Cargo.toml

  rust-fmt:
    runs-on: ubuntu-latest
    needs: rust-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path p2panda-rs/Cargo.toml -- --check

  rust-clippy:
    runs-on: ubuntu-latest
    needs: rust-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Restore from cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/work/p2panda/p2panda/p2panda-rs/target
            ~/work/p2panda/p2panda/p2panda-rs/Cargo.lock
            ~/.cargo/bin
            ~/.cargo/git/db
            ~/.cargo/registry/cache
            ~/.cargo/registry/index
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - name: Check code with clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --manifest-path p2panda-rs/Cargo.toml
