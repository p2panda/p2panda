name: p2panda-js

on: push

env:
  working_directory: p2panda-js

jobs:
  js-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [18, 19, 20]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node ${{ matrix.node }}
        # This action handles node dependency caching for us
        uses: actions/setup-node@v3
        with:
          node-version: "${{ matrix.node }}"

      - name: Setup Rust toolchain
        uses: moonrepo/setup-rust@v0
        with:
          bins: wasm-bindgen-cli
          targets: wasm32-unknown-unknown

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.working_directory }}

      - name: Run tests
        run: npm run test --coverage
        working-directory: ${{ env.working_directory }}

      - if: matrix.node == 18
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  js-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        # This action also handles dependency caching for us
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ env.working_directory}}/.nvmrc

      - name: Setup Rust toolchain
        uses: moonrepo/setup-rust@v0
        with:
          bins: wasm-bindgen-cli
          targets: wasm32-unknown-unknown

      - name: Install wasm-opt
        uses: giantswarm/install-binary-action@v1
        with:
          binary: "wasm-opt"
          version: "114"
          download_url: "https://github.com/WebAssembly/binaryen/releases/download/version_${version}/binaryen-version_${version}-x86_64-linux.tar.gz"
          tarball_binary_path: "*/bin/${binary}"
          smoke_test: "${binary} --version"

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.working_directory }}

      - name: Run build
        run: npm run build
        working-directory: ${{ env.working_directory }}

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        # This action also handles dependency caching for us
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ env.working_directory}}/.nvmrc

      - name: Setup Rust toolchain
        uses: moonrepo/setup-rust@v0
        with:
          bins: wasm-bindgen-cli
          targets: wasm32-unknown-unknown

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.working_directory }}

      - name: Compile wasm to regenerate type declarations
        run: npm run wasm
        working-directory: ${{ env.working_directory }}

      - name: Check types
        run: npm run typecheck
        working-directory: ${{ env.working_directory }}
